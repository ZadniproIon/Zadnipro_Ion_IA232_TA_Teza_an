High order transition elements: The xNy-element concept - Part I: Statics

By Sascha Duczek and Albert Artha Saputra and Hauke Gravenkamp

Abstract

Advanced transition elements are of utmost importance in many applications of the finite element method (FEM) where a local mesh refinement is required. Considering problems that exhibit singularities in the solution, an adaptive hp -refinement procedure must be applied. Even today, this is a very demanding task especially if only quadrilateral/hexahedral elements are deployed and consequently the hanging nodes problem is encountered. These element types, are, however, favored in computational mechanics due to the improved accuracy compared to triangular/tetrahedral elements. Therefore, we propose a compatible transition element – x N y -element – which provides the capability of coupling different element types. The adjacent elements can exhibit different element sizes, shape function types, and polynomial orders. Thus, it is possible to combine independently refined h - and p -meshes. The approach is based on the transfinite mapping concept and constitutes an extension/generalization of the pNh -element concept. By means of several numerical examples, the convergence behavior is investigated in detail, and the asymptotic rates of convergence are determined numerically. Overall, it is found that the proposed approach provides very promising results for local mesh refinement procedures.

Highlights

• Derivation of general transition elements coupling different 1. element types, 2. element sizes, 3. polynomial orders. • Verification that the elements are high order complete (high order patch test). • Proof that the asymptotic convergence rates depend on the minimum polynomial order $p_{\mathrm{min}}$ . • Assessment of the performance of transition elements using examples with singularity.

1 Introduction

Local mesh refinement procedures are of crucial importance if the solution to a partial differential equation (PDE) exhibits steep gradients or singular behavior. In these cases, it has been shown that high order finite element methods (FEMs) in conjunction with pure p -refinement strategies (constant mesh size with increasing polynomial degree $p$ ) are not an optimal choice [1] , and only algebraic rates of convergence are obtained. In order to achieve the desired exponential convergence characteristics, a combination of h - (constant polynomial degree $p$ with decreasing element size $h$ ) and p -refinement is required [1] . In computational mechanics, quadrilateral/hexahedral finite elements are generally favored over their triangular/tetrahedral counterparts. This preference is mainly related to the following two reasons: (i) quadrilateral/hexahedral finite elements provide more accurate results [4] and (ii) the formulation of high order shape functions for quadrilateral/hexahedral finite elements is significantly simplified due to the possibility of using simple tensor products of the one-dimensional shape functions [5] . Considering triangular or tetrahedral (high order) finite elements, the formulation of suitable shape functions is much more elaborate [7] . The mentioned attributes explain why the analyst usually strives to utilize quadrilateral/hexahedral elements as much as possible. This, however, causes problems when a local h -refinement is required to improve the solution. A conformal discretization can only be achieved if special element types are used or other measures are taken to prevent the so-called “hanging node problem” (see Fig. 1 ). A matching interpolation between adjacent finite elements can be generated by employing the penalty method, Lagrange multipliers, Nitsche’s method, or multi-point constraints [13] . The problem with these methods is that they severely constrain the solution field (primary variables) and therefore, the quality of the numerical results deteriorates in a certain region around the coupling zone.

A different approach to ensure a continuous solution field is based on the partition of unity method (PUM) where the numerical results are improved by enriching the ansatz space [15] . Two prominent representatives of this class of methods are the extended finite element method (XFEM) and the generalized finite element method (GFEM) \footnote{ 1 Note that a PU is not a prerequisite for the application of the XFEM and GFEM, but PU shape functions are often used to approximate the enrichment function.} . The PUM is a widely used and very versatile approach, but depending on the enrichment functions that are utilized, problems with the numerical integration, conditioning of the system matrices, and blending elements \footnote{ 2 Blending elements are special elements in XFEM where not all nodes are enriched.} may arise [16] . Closely related to this approach are schemes that use a coarse basis mesh, and the mesh refinement is executed by deploying an overlay mesh with a different element size or polynomial order in areas where the solution must be improved (see Fig. 2 ). The d - [17] , s - [18] , hpd - [19] and multi-level hp -versions of the FEM [20] fall into this category. Basically, the computational domain is decomposed into two regions with different solution characteristics: (i) smooth or (ii) non-smooth solution fields. In the first region, a coarse p -mesh can be employed while a mesh refinement is needed in the second one. The mentioned approaches only differ in how the mesh refinement (overlay mesh) is set up. In the beginning of the 1990s, the d - (d: domain decomposition) and s -versions (s: superposition) of the FEM have been developed in parallel by Rank [17] and Fish [18] , respectively. In the d -version, a coarse p -mesh is overlaid by a fine discretization using h -elements [21] . Across the boundary of the refinement zone, a C \textsuperscript{0} -continuous approximation is achieved by imposing homogeneous Dirichlet boundary conditions (BCs). Since the coarse mesh is a subset of the fine discretization – i.e., a certain number of small (refined) elements share the same elemental boundary with a large base element [17] – the Dirichlet BCs can be applied in a strong sense. However, regarding the s -FEM proposed by Fish [18] , the base and overlay meshes do not need to be conformal anymore. That is to say, C \textsuperscript{0} -continuity (compatibility) must be achieved by imposing Dirichlet BCs on the refinement domain in a weak sense. This can be done by means of standard approaches such as the penalty method, Lagrange multipliers, or Nitsche’s method. The overlay mesh may consist of hierarchical high order finite elements in regions where the solution indicates high gradients. The hpd -FEM is an extension of the d -FEM [19] where the idea of several independent overlay meshes is introduced. The different overlay meshes may overlap, and linear shape functions are commonly employed. This idea can also be used when coupling dimensionally different elements (dimensional adaptivity) [23] . In Refs. [24] , several (hierarchical) levels of overlay meshes being conformal with the local spacetree decomposition of the integration domain have been proposed. With this approach, the discontinuities in the displacement field caused by material inclusions can be easily captured. Yet, the most general approach is the multi-level hp -FEM, where several high order (hierarchical) overlay meshes are introduced [20] . In this method, an optimal combination of high order base elements and high or low order overlay elements can be set up. However, common to all introduced methods based on this refinement-by-superposition technique is that extra care has to be taken to ensure the linear independence. A linearly dependent set of shape functions should be avoided at all costs, since it results in a rank-deficient stiffness matrix [23] . In addition, the implementation of these methods in existing FE-codes is not straightforward since complex data structures have to be introduced when using high order (hierarchical) overlay meshes.

Another strategy to circumvent the hanging node problem, which will be followed in this article, is seen in the use of special transition elements. These elements are very helpful when local mesh refinement procedures are based on quadrilateral/hexahedral finite elements. Among those approaches, variable-node elements for 1-irregular/balanced meshes \footnote{ 3 A 1-irregular mesh is a discretization where on each edge only on hanging node may exist; i.e., in two-dimensional applications, one large element can be coupled to two smaller elements.} have been constructed by Gupta for two-dimensional applications [28] (see Fig. 3 ), while Morton et al. published an extension for three dimensions [29] . In Ref. [30] , an improved 5-node element is developed based on the work by Gupta [28] , where the theoretically optimal rates of convergence are restored. These elements feature piecewise linear shape functions on their boundaries such that two smaller finite elements can be coupled conformally to a larger transition element. The derivation of these shape functions is described visually in Ref. [4] (Chap. 8, p. 175). Note that this approach can also be used to derive Serendipity shape functions in a structured way \footnote{ 4 The derivation of Serendipity shape functions can also be achieved based on a tensor product formulation of the shape functions [31] .} using some “ingenuity” [33] . To rely on ingenuity is, however, not a valid scientific approach and therefore, a generalization of this method is required. The sought-after generalization has already been proposed in the early 1970s and is closely related to the names Gordon and Hall [34] . The works of Gordon and co-workers are probably best known in the context of geometry mapping in the p -FEM [1] . They developed a methodology which is known as transfinite interpolation or blending function method [36] . In this framework, the term transfinite means that the interpolation of an arbitrary function matches the original function at a non-denumerable (transfinite \footnote{ 5 Note that the word transfinite can often be replaced by the word infinite without changing the meaning of the term. We, however, decided to stick to the terminology introduced by Gordon [34] .} ) set of points [34] , i.e., the functions are identical in certain parts but not over the whole domain.

This idea is taken from Coons, who was the first to describe a method to construct an interpolatory surface which coincides with arbitrarily prescribed curves [39] . It is obvious that this approach can also be used to generate complex shape functions. Transition elements which couple different element types are straightforward to derive by introducing piecewise polynomial shape functions on the element edges. As mentioned before, such elements are indispensable for local mesh refinement procedures based on quadrilateral/hexahedral discretizations. Scholz developed two- and three-dimensional transition elements with piecewise linear and quadratic shape functions for mesh refinement purposes [33] . Here, each edge can be divided into two parts and therefore, 1-irregular meshes can be generated without introducing hanging nodes. In addition to the mentioned element types, Röhr used the transfinite interpolation technique to derive C \textsuperscript{1} -continuous transition elements based on cubic Hermite shape functions [42] . In a series of papers, Cavendish used the blending function method to derive piecewise linear membrane elements, three-dimensional continuum elements, and C \textsuperscript{1} -continuous elements (cubic Hermite blending functions) [43] . Each refined element is referred to as macro-element, and by analogy with conventional substructuring techniques, the internal degrees of freedom (DOFs) are eliminated by static condensation [45] . In the literature, such elements are sometimes also called Coons-patch macro-elements, see Refs. [47] . In his works, Provatidis uses shape functions based on piecewise linear functions, cubic B-splines, or Lagrange polynomials to construct versatile transition elements [47] . The role of interior nodes is investigated in Ref. [48] , where it is stated that “a sufficient number of internal nodes is necessary to ensure convergence”. Note that these additional (internal) nodes ensure polynomial completeness of the shape functions. Provatidis also argues that this type of macro-element constitutes a precursor for the nowadays very successful isogeometric analysis (IGA) [49] . In Refs. [50] , Weinberg and Gabbert described the so-called pNh -element concept (which uses an analogous ansatz as discussed above). The development of this element type was inspired by the difficulties that were encountered when solving contact problems with the p -version of the FEM. To be able to employ standard contact algorithms that are widely implemented in commercial software tools, the idea to couple large p -elements in areas with smooth solution characteristics to a fine mesh consisting of h -elements where contact might occur (for contact problems the polynomial degree is $p_{\mathrm{h}}\,{=}\,1$ , i.e. linear shape functions are generally preferred), was developed. The name derives from the fact that one p -element can be coupled to $N$ h -elements [52] . In this formulation, it is, in principle, possible to divide each edge/face into a different number of subdomains [50] and also to assign different polynomial degrees to each element, although this possibility was not further explored. The approach being proposed in this article builds on the work of Weinberg and extends it in several aspects. The developed concept will be referred to as x N y -element to emphasize that it is possible to couple different element families x and y (based on different shape functions). Since it is basically possible to couple an arbitrary number of y -elements to each edge/face of an x -element, N is denoted in boldface. That is to say, N is generally vector-valued and contains four different components denoting the numbers of elements that are coupled to each of the four edges of a quadrilateral element. In this article, the focus is placed on a compatible coupling of spectral [5] and p -elements [1] , although it is theoretically possible to couple arbitrary element types.

For the sake of completeness, other approaches that can be used for local mesh refinement in conjunction with quadrilateral/hexahedral finite elements are briefly introduced in the following. Baitsch & Hartmann also developed a transition element based on piecewise polynomial shape functions [53] . This approach requires subdividing the refined element into a number of quadrilateral subdomains and consequently leads to a comparably large number of internal degrees of freedom within each macro-element. Therefore, a macro-element similar to the one proposed by Cavendish is obtained [45] . In Ref. [54] , a variable-node transition element based on the moving least-square (MLS) approximation is proposed. This element is compatible with a piecewise quadratic interpolation on the element edges. Note that depending on the node configuration, a negative Jacobian (mapping from the local to the global domain) might be observed, which needs to be addressed by adding additional nodes [54] . This element formulation has been applied to contact problems using a node-to-node algorithm [55] . Based on the smoothed finite element method (SFEM), a polygonal variable-node element is devised [56] . This method can straightforwardly be used to couple elements of different sizes. Another approach that can be employed to create very versatile discretizations is the scaled boundary finite element method (SBFEM) [57] , in particular, the variant known as scaled boundary polygons [58] . This method allows the construction and coupling of star-convex polygonal elements consisting of an arbitrary number of edges, where the type and order of interpolation along each edge can be chosen independently. The SBFEM has been applied successfully to quadtree/octree decompositions [61] , as well as polytopal meshes [65] . For linear static problems, the SBFEM achieves high order convergence while only requiring nodes on the element edges. However, for cases involving inertia terms, non-linearities, or arbitrary body loads, additional degrees of freedom have to be introduced to achieve high order convergence [67] . Extensive research in the area of transition elements, especially with respect to coupling solid (continuum) and shell elements has been conducted by Surana [69] . In Ref, [69] Surana provides shape functions for transition elements which can be used to couple quadrilateral with beam-like or other quadrilateral elements for different polynomial orders ( $p\,{=}\,1,2,3$ ). Extensions to axisymmetric and three-dimensional problems have been proposed in Refs. [71] . Thus, it is straightforwardly possible to couple hexahedral and (curved) shell-elements without the need for additional multi-point constraints, penalty, or mortar-coupling. Based on this work, geometrically non-linear transition elements are formulated using a total Lagrangian approach in Refs. [72] . Finally, it should be noted that similar elements are available for (Fourier) heat conduction problems where the nodal temperature and temperature gradients are included as primary variables [74] .

2 High Order Shape Functions

One of the primary goals of this contribution is to study the performance of transition elements based on transfinite mappings when different element types are coupled. In this article, we focus on coupling the p -version of the FEM with the spectral element method (SEM). Therefore, we will briefly recapitulate the derivation of the corresponding one-dimensional shape functions.

2.1 Nodal shape functions: SEM

The shape functions in the SEM are based on Lagrangian interpolation polynomials. Given a set of interpolation non-equidistant points/nodes, denoted by $\eta_{i}$ [5] , Lagrange polynomials of order $p$ are defined as [76] : 
 
 $N_{i}(\eta)=\prod_{j=1,j\neq i}^{p+1}\cfrac{\eta-\eta_{j}}{\eta_{i}-\eta_{j}}\,,\qquad i=1,2,\ldots,p+1\,.$  (1) 
 Such shape functions constitute a consistent extension of conventional low order (linear and quadratic) finite elements, inasmuch as they exhibit similar properties, in particular: • Kronecker-delta-property: 
 
 $N_{i}(\eta_{j})=\delta_{ij}$  (2) • partition of unity: 
 
 $\sum\limits_{i}N_{i}(\eta)=1$  (3) Equation ( 2 ) also implies that these shape functions are ‘node-based’ since the unknowns retain physical meaning. Therefore, the post-processing and the application of Dirichlet boundary conditions are straightforward. While Lagrange interpolation polynomials can, in principle, be defined for any set of distinct nodes, their properties depend critically on the nodal positions. In the wide body of literature, there are several possibilities to distribute these points within the reference interval $[-1,1]$ , see [5] . In the framework of the SEM, the following distributions are commonly used: Gauß-Lobatto-Chebyshev (GLC) and Gauß-Lobatto-Legendre (GLL) points: 1. GLC points [77] : • $\eta_{i}^{\mathrm{GLC}}=-\cos\left(\cfrac{i-1}{p}\;\uppi\right)\,,\quad i=1,2,\ldots,p\,{+}\,1\,.$ 2. GLL points [12] : • $\eta_{i}^{\mathrm{GLL}}=\begin{cases}-1&\text{for }i\,{=}\,1\\
\hat{\eta}_{i}&\text{for }i\,{=}\,2,3,\ldots,p\\
+1&\text{for }i\,{=}\,p\,{+}\,1\end{cases}.$ In the above definition, $\hat{\eta}_{i}$ denotes the roots of the Lobatto polynomial $L_{\mathrm{o}_{p-1}}(\eta)$ of order $p-1$ , which is defined as the first derivative of the Legendre polynomial $L_{p}(\eta)$ of order $p$ [5] 
 
 $L_{\mathrm{o}_{p-1}}(\eta)=\cfrac{\mathrm{d}L_{p}(\eta)}{\mathrm{d}\eta}\,.$  (4) 
 Figure 4 depicts the spectral shape functions up to an order of $p=5$ (GLL nodal distribution). The most prominent drawback of this set of shape functions is that when changing the order $p$ , all shape functions are modified and therefore, the coefficient matrices have to be computed anew. Lagrange interpolation polynomials are commonly used in the SEM for wave propagation phenomena [78] . In this context, the main advantage is the possibility to diagonalize the mass matrix (mass lumping) without loss of accuracy (retaining optimal rates of convergence) [80] .

2.2 Hierarchic shape functions: p-FEM

The concept of hierarchical shape functions is linked to the p -version of the FEM [1] . In this context, hierarchical means that all shape functions of order $p$ are contained in the set of shape functions of order $p\,{+}\,1$ . The construction of these shape functions is based on the normalized integrals of the Legendre polynomials: 
 
 $N_{i}(\eta)=\sqrt{\cfrac{2i-1}{2}}\int\limits_{-1}^{\eta}L_{i-1}(x)\mathrm{d}x\,,\quad i=2,3,\ldots,p\,,$  (5) 
 with $L_{i-1}(x)$ denoting the Legendre polynomial of order $i\,{-}\,1$ . The functions defined by Eq. ( 5 ) contain polynomials of order 2 up to $p$ and vanish at the interval boundaries. To create a set of complete polynomials, these interpolants are augmented by the standard linear finite element shape functions: 
 
  
 $\displaystyle N_{1}(\eta)$ $\displaystyle=\cfrac{1}{2}(1-\eta)\,,$  (6a) 
 $\displaystyle N_{p+1}(\eta)$ $\displaystyle=\cfrac{1}{2}(1+\eta)\,.$  (6b) 


Figure 5 shows the hierarchical shape functions up to an order of $p=5$ . The Legendre polynomials can be computed using Bonnet’s recursion expression [3] or Rodriguez’ formula 
 
 $L_{i}(x)=\cfrac{1}{2^{i}i!}\cfrac{\mathrm{d}^{i}}{\mathrm{d}x^{i}}[(x^{2}-1)^{i}]\,,\quad i\in\mathbb{N}_{0}$  (7) 
 Note that only the points at the interval limits possess the Kronecker delta property and therefore, only DOFs associated with these functions (modes) retain a physical meaning, i.e., the linear shape functions alone possess both the Kronecker delta and the partition of unity properties. On the other hand, the higher order modes ensure the completeness of the ansatz for arbitrary polynomial orders. These shape functions are often referred to as modal functions [5] and involve an additional step in the post-processing and the application of non-homogeneous Dirichlet boundary conditions (BCs). The hierarchical property implies that the order of interpolation can be increased by including additional shape functions without modifying the existing ones. The mass and stiffness matrices inherit this hierarchy [3] .

3 Derivation of Transition Elements

The derivation of the shape functions for a general two-dimensional transition element, discussed in this section, is based on the concepts presented by Gordon and co-workers [34] . The basic idea is to construct bivariate interpolants that coincide with given univariate functions at the element’s boundary. Gordon et al. referred to this concept as transfinite interpolation , indicating that the bivariate interpolant agrees exactly with the univariate functions at infinitely many points at the element edges. This approach is often used in the p -FEM to ensure an accurate description of the geometry of the discretized structure [1] . In the context of geometry mapping, the method is commonly referred to as blending function method . The first use of this approach was reported by Coons [39] . Based on this method, arbitrarily distorted element edges/faces can be realized. As an input, the parametric description of an element’s boundary is required. If special transition elements are to be created, the functions on the individual edges need to be chosen such that a C \textsuperscript{0} -continuous approximation of the primary variables is achieved. Thus, standard isoparametric finite elements [83] can be combined with transition elements in a straightforward fashion. The following explanations are given for two-dimensional domains, while the extension to three-dimensional applications is straightforward. Although the general approach taken in this article is analogous to the one discussed by Gordon and co-workers [34] , we extend this methodology to the conformal coupling of not only elements of different sizes but also elements with different types of shape functions. We will focus on a combination of nodal Lagrange basis functions [12] and hierarchical (modal) ones based on the integrals of the Legendre polynomials [1] , as already discussed in Sect. 2 . A second important aspect of this contribution is a thorough assessment of the convergence properties of this class of transition elements. At least to the authors’ knowledge, there is no concise investigation concerning the asymptotic rates of convergence related to these elements, which might also explain why they are rarely used despite their versatility.

3.1 Transfinite interpolation

Consider a given function $\Xi(\xi,\eta)$ that is to be interpolated over the domain $\Omega$ : $\,[-1,1]\times[-1,1]$ . An interpolation can generally be achieved by projecting the arbitrary bivariate function $\Xi(\xi,\eta)$ onto a chosen subspace of bivariate functions. Such a projection will be denoted as $\mathcal{P}[\Xi(\xi,\eta)]$ . Let $\mathcal{P}_{\xi}[\Xi(\xi,\eta)]$ and $\mathcal{P}_{\eta}[\Xi(\xi,\eta)]$ be projectors that interpolate $\Xi(\xi,\eta)$ along the $\xi$ - and $\eta$ -directions, respectively. A suitable projection that interpolates $\Xi(\xi,\eta)$ over the domain $\Omega$ can then be defined as [36] 
 
 $\mathcal{P}[\Xi(\xi,\eta)]=\mathcal{P}_{\xi}[\Xi(\xi,\eta)]\oplus\mathcal{P}_{\eta}[\Xi(\xi,\eta)]=\mathcal{P}_{\xi}[\Xi(\xi,\eta)]+\mathcal{P}_{\eta}[\Xi(\xi,\eta)]-\mathcal{P}_{\xi}[\mathcal{P}_{\eta}[\Xi(\xi,\eta)]]\,.$  (8) 
 In Ref. [36] , the $\oplus$ -operator introduced in Eq. ( 8 ) is referred to as Boolean sum . In the following derivations, $\Xi(\xi,\eta)$ is assumed to be a scalar-valued function representing the primary variable (unknown). An analogous approach is taken for vector-valued functions, e.g., a displacement field. However, since it is not common practice to deploy different types of functions for the displacements in the different coordinate directions, it is sufficient to derive the necessary formulas based on a scalar function $\Xi(\xi,\eta)$ . The last term in Eq. ( 8 ) – $\mathcal{P}_{\xi}[\mathcal{P}_{\eta}[\square]]$ – is often referred to as product/mixed projection operator. Note that the individual projection operators are both linear 
 
 $\mathcal{P}_{s}[f(\xi,\eta)+g(\xi,\eta)]=\mathcal{P}_{s}[f(\xi,\eta)]+\mathcal{P}_{s}[g(\xi,\eta)]$  (9) 
 and idempotent 
 
 $\mathcal{P}_{s}[\mathcal{P}_{s}[f(\xi,\eta)]]=\mathcal{P}_{s}[f(\xi,\eta)]\,,$  (10) 
 where $f(\xi,\eta)$ and $g(\xi,\eta)$ are (continuous) bivariate functions and the subscript $\square_{s}$ denotes the coordinate direction ( $s\in\{\xi,\eta\}$ ).

3.2 Transfinite bivariate Lagrange interpolation

In this section, a special class of projection operators based on Lagrangian interpolation polynomials is introduced. The projectors in the individual coordinate directions are defined by the following expressions 
 
 $\displaystyle\mathcal{P}_{\xi}[\Xi(\xi,\eta)]$ $\displaystyle=\sum\limits_{i=1}^{p_{\xi}^{\mathrm{p}}+1}\varphi_{i}(\xi)\Xi(\xi_{i},\eta)\,,$  (11) 
 
 $\displaystyle\mathcal{P}_{\eta}[\Xi(\xi,\eta)]$ $\displaystyle=\sum\limits_{i=1}^{p_{\eta}^{\mathrm{p}}+1}\psi_{i}(\eta)\Xi(\xi,\eta_{i})\,,$  (12) 
 where $\varphi_{i}(\xi)$ and $\psi_{i}(\eta)$ are referred to as blending functions which are given by univariate Lagrangian interpolation polynomials. We note that for the application of the projection operators, it is sufficient to know the function values at discrete curves (lines) in the interior of a finite element and at its boundary. Depending on the polynomial degree of the blending functions, the amount of information (data) that is required in the interior of an element differs (see also Fig. 6 ). In principle, the polynomial degree of the blending functions can be different in both directions ( $p_{\xi}^{\mathrm{p}}\neq p_{\eta}^{\mathrm{p}}$ ). The definition of the product/mixed projection operator immediately follows from Eqs. ( 11 ) and ( 12 ) as 
 
 $\mathcal{P}_{\xi}[\mathcal{P}_{\eta}[\Xi(\xi,\eta)]]=\sum\limits_{i=1}^{p_{\xi}^{\mathrm{p}}+1}\sum\limits_{j=1}^{p_{\eta}^{\mathrm{p}}+1}\varphi_{i}(\xi)\psi_{j}(\eta)\Xi(\xi_{i},\eta_{j})\,.$  (13) 
 From Eq. ( 13 ) we can infer that the product projector interpolates the function only at discrete nodal locations, whereas the individual projectors take certain lines into account (see Fig. 6 – interior: dashed lines, boundary: solid lines). In most applications, linear blending functions are deployed [1] and therefore, $\varphi_{i}(\xi)$ and $\psi_{i}(\eta)$ are given as 
 
 $\displaystyle\varphi_{1}(\xi)$ $\displaystyle=N_{1}^{1}(\xi)=\cfrac{1}{2}(1-\xi),\qquad\psi_{1}(\eta)$ $\displaystyle=N_{1}^{1}(\eta)=\cfrac{1}{2}(1-\eta)\,,$  (14) 
 
 $\displaystyle\varphi_{2}(\xi)$ $\displaystyle=N_{2}^{1}(\xi)=\cfrac{1}{2}(1+\xi),\qquad\psi_{2}(\eta)$ $\displaystyle=N_{2}^{1}(\eta)=\cfrac{1}{2}(1+\eta)\,.$  (15) 
 The superscript $\square^{1}$ indicates that the polynomial degree is selected as $p\,{=}\,1$ . Blending functions of arbitrary order $\square^{p}$ can easily be generated using standard Lagrangian interpolation techniques which have been discussed in Sect. 2.1 . The nodal distribution that is used to derive the blending functions is principally arbitrary, but we assume an equidistant spacing in the remainder of the article.

3.3 Derivation of shape functions for transition elements

Based on the concept of transfinite bivariate Lagrange interpolation (see Sect. 3.2 ) we are now able to derive the shape functions for arbitrary transition elements. In the following, we will concentrate on two-dimensional displacement-type finite elements. A C \textsuperscript{0} -continuous displacement field between adjacent elements is achieved if the shape functions coincide at the common boundaries, i.e., on the elements’ edges. Therefore, it suffices to employ linear blending functions in the derivation of the shape functions for arbitrary transition elements. As a result, the interpolated (projected) function, which is used to derive the shape functions, matches the original one (function that was projected) at the boundary of the element. This fact is illustrated in Fig. 6 . Consequently, high order blending terms are not considered in the examples used in this contribution.

The point of departure for the derivation of the shape functions of arbitrary transition elements are the shape functions of a standard high order finite element, which should be complete polynomials of order $p$ . In our implementation, the basis element is either a p -element [1] or a spectral element [5] based on a tensor product formulation. Keep in mind that only specific shape functions belonging to the boundary of an element are required for the coupling of either different types of elements or multiple elements to only one element. Therefore, it is sufficient to adjust the nodal (corner nodes) and edge shape functions that belong to the part of the boundary that is coupled while leaving the other edge and bubble/interior modes untouched. In the most general case, all four edges are involved and therefore, shape functions associated with all corner vertices and edges are subject to changes. As mentioned before, we need a description of the function that is to be interpolated on the boundary of the transition element. This function, in the remainder of the article referred to as $\bar{u}(\xi,\eta)$ , is given in terms of one-dimensional shape functions on the four edges of a quadrilateral element (see Fig. 8 ) 
 
 $\bar{u}(\xi,\eta)=\begin{cases}\bar{u}_{\mathrm{E_{1}}}(\xi)=\sum\limits_{i=1}^{n_{\mathrm{E}_{1}}}\bar{N}_{i}(\xi)u_{\mathrm{E_{1}}}^{(i)},&\text{for }\eta=-1\,,\\
\bar{u}_{\mathrm{E_{2}}}(\eta)=\sum\limits_{i=1}^{n_{\mathrm{E}_{2}}}\hat{N}_{i}(\eta)u_{\mathrm{E_{2}}}^{(i)},&\text{for }\xi=1\,,\\
\bar{u}_{\mathrm{E_{3}}}(\xi)=\sum\limits_{i=1}^{n_{\mathrm{E}_{3}}}\tilde{N}_{i}(\xi)u_{\mathrm{E_{3}}}^{(i)},&\text{for }\eta=1\,,\\
\bar{u}_{\mathrm{E_{4}}}(\eta)=\sum\limits_{i=1}^{n_{\mathrm{E}_{4}}}\breve{N}_{i}(\eta)u_{\mathrm{E_{4}}}^{(i)},&\text{for }\xi=-1\,,\end{cases}$  (16) 
 where $\bar{N}_{i}(t)$ , $\hat{N}_{i}(t)$ , $\tilde{N}_{i}(t)$ , and $\breve{N}_{i}(t)$ denote different standard or piecewise shape functions \footnote{ 6 Note that the edge shape functions do not need to be polynomial. In principle, it is possible to assume any type of shape functions such as trigonometric, splines, etc. on the boundary. In the remainder of the article, we will, however, concentrate on (complete) polynomial shape functions.} . This function describes only the displacements at the boundary of the element which is sufficient for the conformal/compatible coupling of different element types and numbers. The variables $n_{\mathrm{E}_{i}}$ , where $i\in\{1,2,3,4\}$ , denote the number of shape functions associated with the corresponding edge including the shape functions of the corner nodes. Observe that in the introduced numbering scheme, the shape functions associated with the corner nodes/vertices are always connected to the index values $i\,{=}\,1$ and $i\,{=}\,n_{\mathrm{E}_{j}}$ . The parameters $u_{\mathrm{E_{i}}}^{(j)}$ denote the $j$ \textsuperscript{th} degree of freedom belonging to the $i$ \textsuperscript{th} edge of the finite element. In A , we will come back to these one-dimensional shape functions and present a specific example to illustrate their use. The generic form of the displacement field including all shape functions of the transition element, i.e., the functions defined on the boundary and in the interior of the domain, is given as 
 
 $u(\xi,\eta)=\underbrace{\mathcal{P}_{\xi}[\bar{u}(\xi,\eta)]\oplus\mathcal{P}_{\eta}[\bar{u}(\xi,\eta)]}_{u^{\circ}(\xi,\eta)}\;+\;\text{internal shape functions,}$  (17) 
 where $u^{\circ}(\xi,\eta)$ is the part of the displacement field related to the shape functions that are purely defined on the edges of the element and blended into the interior. Since we restrict ourselves to linear blending functions, $u^{\circ}(\xi,\eta)$ is given as 
 
 $\begin{split}u^{\circ}(\xi,\eta)=&\underbrace{N_{2}^{1}(\xi)\bar{u}_{\mathrm{E_{2}}}(\eta)+N_{1}^{1}(\xi)\bar{u}_{\mathrm{E_{4}}}(\eta)}_{\mathcal{P}_{\xi}[\bar{u}(\xi,\eta)]}+\underbrace{N_{1}^{1}(\eta)\bar{u}_{\mathrm{E_{1}}}(\xi)+N_{2}^{1}(\eta)\bar{u}_{\mathrm{E_{3}}}(\xi)}_{\mathcal{P}_{\eta}[\bar{u}(\xi,\eta)]}-\\
&\underbrace{\left[N_{1}^{1}(\xi)N_{1}^{1}(\eta)u^{(1)}+N_{2}^{1}(\xi)N_{1}^{1}(\eta)u^{(2)}+N_{2}^{1}(\xi)N_{2}^{1}(\eta)u^{(3)}+N_{1}^{1}(\xi)N_{2}^{1}(\eta)u^{(4)}\right]}_{\mathcal{P}_{\xi}[\mathcal{P}_{\eta}[\bar{u}(\xi,\eta)]]}\,,\end{split}$  (18) 
 with the linear interpolation/blending functions defined in Eqs. ( 14 ) and ( 15 ). Here, the coefficients $u^{(i)}$ denote the values of the primary unknowns (structural analysis: displacements DOFs) at the four corner vertices. In the next step, we substitute the definition of the edge shape functions provided in Eq. ( 16 ) into Eq. ( 18 ) 
 
 $\begin{split}u^{\circ}(\xi,\eta)=&\underbrace{N_{2}^{1}(\xi)\sum\limits_{i=1}^{n_{\mathrm{E}_{2}}}\hat{N}_{i}(\eta)u_{\mathrm{E_{2}}}^{(i)}+N_{1}^{1}(\xi)\sum\limits_{i=1}^{n_{\mathrm{E}_{4}}}\breve{N}_{i}(\eta)u_{\mathrm{E_{4}}}^{(i)}}_{\mathcal{P}_{\xi}[\bar{u}(\xi,\eta)]}+\underbrace{N_{1}^{1}(\eta)\sum\limits_{i=1}^{n_{\mathrm{E}_{1}}}\bar{N}_{i}(\xi)u_{\mathrm{E_{1}}}^{(i)}+N_{2}^{1}(\eta)\sum\limits_{i=1}^{n_{\mathrm{E}_{3}}}\tilde{N}_{i}(\xi)u_{\mathrm{E_{3}}}^{(i)}}_{\mathcal{P}_{\eta}[\bar{u}(\xi,\eta)]}-\\
&\underbrace{\left[N_{1}^{1}(\xi)N_{1}^{1}(\eta)u^{(1)}+N_{2}^{1}(\xi)N_{1}^{1}(\eta)u^{(2)}+N_{2}^{1}(\xi)N_{2}^{1}(\eta)u^{(3)}+N_{1}^{1}(\xi)N_{2}^{1}(\eta)u^{(4)}\right]}_{\mathcal{P}_{\xi}[\mathcal{P}_{\eta}[\bar{u}(\xi,\eta)]]}\,.\end{split}$  (19) 


To extract the individual shape functions corresponding to each DOF we have to prescribe a unit value for that DOF and set all other DOFs to zero. Although the numbering scheme of the DOFs is arbitrary, we will introduce a specific order to facilitate the understanding. The chosen methodology is based on the common practice in the p -FEM, i.e., first the DOFs of the corner vertices are numbered, then those belonging to the edges 1, 2, 3, and 4 (in this order), before the interior DOFs are taken care of. As an example, a cubic element with one DOF per node/mode is illustrated in Fig. 8 . Special care has to be taken in the p -FEM – where hierarchic shape functions are employed which do not have the Kronecker delta property – where the DOFs do not retain a physical meaning and are not connected to a certain nodal position. The illustration provided in Fig. 8 only assigns positions to certain DOFs to facilitate the understanding. The DOFs associated with the corner nodes are always assigned the numbers 1, 2, 3, and 4. The DOFs connected to the different edges indicated by $u_{\mathrm{E_{i}}}^{(j)}$ are defined by the vectors $\mathbf{I}_{i}$ containing the indices of the local DOFs 
 
 $\displaystyle\mathbf{u}_{\mathrm{E_{1}}}$ $\displaystyle=\left[u^{(\mathbf{I}_{1}(1))},u^{(\mathbf{I}_{1}(2))},\ldots,u^{(\mathbf{I}_{1}(n_{\mathrm{E}_{1}}))}\right]^{\mathrm{T}}\quad\text{for }\mathbf{I}_{1}=[$ $\displaystyle 1,5,6,\ldots,4{+}(n_{\mathrm{E}_{1}}{-}2),2]\,,$ 
 
 $\displaystyle\mathbf{u}_{\mathrm{E_{2}}}$ $\displaystyle=\left[u^{(\mathbf{I}_{2}(1))},u^{(\mathbf{I}_{2}(2))},\ldots,u^{(\mathbf{I}_{2}(n_{\mathrm{E}_{2}}))}\right]^{\mathrm{T}}\quad\text{for }\mathbf{I}_{2}=[$ $\displaystyle 2,4{+}(n_{\mathrm{E}_{1}}{-}1),4{+}n_{\mathrm{E}_{1}},\ldots,$ 
 
 $\displaystyle 4{+}(n_{\mathrm{E}_{1}}{-}2){+}(n_{\mathrm{E}_{2}}{-}2),3]\,,$ 
 
 $\displaystyle\mathbf{u}_{\mathrm{E_{3}}}$ $\displaystyle=\left[(u^{\mathbf{I}_{3}(1))},u^{(\mathbf{I}_{3}(2))},\ldots,u^{(\mathbf{I}_{3}(n_{\mathrm{E}_{3}}))}\right]^{\mathrm{T}}\quad\text{for }\mathbf{I}_{3}=[$ $\displaystyle 4,4{+}(n_{\mathrm{E}_{1}}{-}2){+}(n_{\mathrm{E}_{2}}{-}1),4{+}(n_{\mathrm{E}_{1}}{-}2){+}n_{\mathrm{E}_{2}},\ldots,$ 
 
 $\displaystyle 4{+}(n_{\mathrm{E}_{1}}{-}2){+}(n_{\mathrm{E}_{2}}{-}2){+}(n_{\mathrm{E}_{3}}{-}2),3]\,,$ 
 
 $\displaystyle\mathbf{u}_{\mathrm{E_{4}}}$ $\displaystyle=\left[u^{(\mathbf{I}_{4}(1))},u^{(\mathbf{I}_{4}(2))},\ldots,u^{(\mathbf{I}_{4}(n_{\mathrm{E}_{4}}))}\right]^{\mathrm{T}}\quad\text{for }\mathbf{I}_{4}=[$ $\displaystyle 1,4{+}(n_{\mathrm{E}_{1}}{-}2){+}(n_{\mathrm{E}_{2}}{-}2){+}(n_{\mathrm{E}_{3}}{-}1),$ 
 
 $\displaystyle 4{+}(n_{\mathrm{E}_{1}}{-}2){+}(n_{\mathrm{E}_{2}}{-}2){+}n_{\mathrm{E}_{3}},\ldots,$ 
 
 $\displaystyle 4{+}(n_{\mathrm{E}_{1}}{-}2){+}(n_{\mathrm{E}_{2}}{-}2){+}(n_{\mathrm{E}_{3}}{-}2){+}(n_{\mathrm{E}_{4}}{-}2),4]\,.$ 
 Note that in this definition, the DOFs of the corner vertices are included in the description of the shape functions on the boundary of the transition element. Based on this definition, we can derive simple expressions for the shape functions corresponding to the corner nodes 
 
 $\displaystyle N_{1}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\xi)\breve{N}_{1}(\eta)$ $\displaystyle+N_{1}^{1}(\eta)\bar{N}_{1}(\xi)$ $\displaystyle-N_{1}^{1}(\xi)N_{1}^{1}(\eta)\,,$  (20) 
 
 $\displaystyle N_{2}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\xi)\hat{N}_{1}(\eta)$ $\displaystyle+N_{1}^{1}(\eta)\bar{N}_{n_{\mathrm{E}_{1}}}\!(\xi)$ $\displaystyle-N_{2}^{1}(\xi)N_{1}^{1}(\eta)\,,$  (21) 
 
 $\displaystyle N_{3}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\xi)\hat{N}_{n_{\mathrm{E}_{2}}}\!(\eta)$ $\displaystyle+N_{2}^{1}(\eta)\tilde{N}_{n_{\mathrm{E}_{3}}}\!(\xi)$ $\displaystyle-N_{2}^{1}(\xi)N_{2}^{1}(\eta)\,,$  (22) 
 
 $\displaystyle N_{4}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\xi)\breve{N}_{n_{\mathrm{E}_{4}}}\!(\eta)$ $\displaystyle+N_{2}^{1}(\eta)\tilde{N}_{1}(\xi)$ $\displaystyle-N_{1}^{1}(\xi)N_{2}^{1}(\eta)\,,$  (23) 
 and also for the shape functions that are associated with only one edge (edge modes) 
 
 $\displaystyle\text{E}_{1}:\;N_{i}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\eta)\bar{N}_{j}(\xi)\,,$  (24) 
 
 $\displaystyle\text{for }i$ $\displaystyle=4+(j-1)\,,$ 
 
 $\displaystyle j$ $\displaystyle=2,3,\ldots,n_{\mathrm{E}_{1}}{-}1\,,$ 
 
 $\displaystyle\text{E}_{2}:\;N_{i}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\xi)\hat{N}_{j}(\eta)\,,$  (25) 
 
 $\displaystyle\text{for }i$ $\displaystyle=4+(n_{\mathrm{E}_{1}}{-}2)+(j-1)\,,$ 
 
 $\displaystyle j$ $\displaystyle=2,3,\ldots,n_{\mathrm{E}_{2}}{-}1\,,$ 
 
 $\displaystyle\text{E}_{3}:\;N_{i}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\eta)\tilde{N}_{j}(\xi)\,,$  (26) 
 
 $\displaystyle\text{for }i$ $\displaystyle=4+(n_{\mathrm{E}_{1}}{-}2)+(n_{\mathrm{E}_{2}}{-}2)+(j-1)\,,$ 
 
 $\displaystyle j$ $\displaystyle=2,3,\ldots,n_{\mathrm{E}_{3}}{-}1\,,$ 
 
 $\displaystyle\text{E}_{4}:\;N_{i}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\xi)\breve{N}_{j}(\xi)\,,$  (27) 
 
 $\displaystyle\text{for }i$ $\displaystyle=4+(n_{\mathrm{E}_{1}}{-}2)+(n_{\mathrm{E}_{2}}{-}2)+(n_{\mathrm{E}_{3}}{-}2)+(j-1)\,,$ 
 
 $\displaystyle j$ $\displaystyle=2,3,\ldots,n_{\mathrm{E}_{4}}{-}1\,.$ 
 We need to remark that the Kronecker delta property of nodal shape functions is lost for the interior nodes when this procedure is applied. This is because only the shape functions belonging to entities on the boundary (2D: edges, 3D: faces) are changed, while the interior ones remain unaltered. Consequently, similar approaches known from the post-processing procedures of the p -FEM have to be used for the proposed transition elements. Furthermore, we notice once again that only the shape functions associated with the corner vertices are affected by the product projection operator $\mathcal{P}_{\xi}[\mathcal{P}_{\eta}[\square]]$ . Shape functions that are connected to only one edge are adjusted/changed by only one of the projectors $\mathcal{P}_{\xi}[\square]$ or $\mathcal{P}_{\eta}[\square]$ .

3.4 Guideline

In the following, the methodology for the derivation of the shape functions of arbitrary transition elements is summarized in a few bullet points. As mentioned at the beginning of this section, we limit ourselves to linear blending functions as they are sufficient to guarantee a C \textsuperscript{0} -continuous approximation. Deploying high order blending functions is, however, very similar – one difference being that the product projector is applied to a larger set of vertices/nodes. For the scheme based on linear blending functions, the general procedure is described as follows: 1. Define the base finite element including its shape functions. 2. Define the shape functions on the edges of the finite element: • Provide the shape functions only for edges that are involved in the coupling (of different element types or numbers of elements). • Edges that retain the standard basis functions are not included in the projection. 3. Apply the projection operators: • The product projection operator $\mathcal{P}_{\xi}[\mathcal{P}_{\eta}[\square]]$ only affects the shape functions of the four corner nodes of a quadrilateral finite element. This operator is applied to all corner nodes that belong to a coupling edge. • The projection in the $\xi$ -direction is achieved using $\mathcal{P}_{\xi}[\square]$ . This operator is applied to all nodes/modes that belong to either edge $E_{2}$ or $E_{4}$ , provided that the corresponding edge is a coupling edge. • The projection in the $\eta$ -direction is achieved using $\mathcal{P}_{\eta}[\square]$ . This operator is applied to all nodes/modes that belong to either edge $E_{1}$ or $E_{3}$ , provided that the corresponding edge is a coupling edge. 4. Standard shape functions: • All shape functions that belong to edges that are not used to couple different element types or numbers of elements are adopted from the base finite element. • Interior (bubble) shape functions are not adjusted at all in the linear blending approach. It is briefly mentioned at this point that, considering the geometry approximation, all standard concepts known from FEM such as iso- sub-, superparametric mapping [4] or blending functions [1] can be employed in a straightforward fashion.

The derivation of a 12-node/mode piecewise bi-quadratic transition element is discussed in detail in A , where different shape function types are employed. The application of the devised methodology is presented for Lagrange-Lagrange, Lagrange-Legendre, and Legendre-Legendre transition elements.

3.5 Numerical integration

The numerical integration of transition elements proves to be a bit more involved compared to standard high order finite elements. Since the shape functions of x N y -elements are only piecewise C \textsuperscript{0} -continuous within the element (weak discontinuity – kink in the displacement field) their first derivatives are discontinuous. Thus, a standard Gauß quadrature over the reference element will not suffice and yield inaccurate results. The remedy for this problem is rather simple and can easily be implemented in any existing finite element code. It involves a subdivision of the integration domain according to the number of elements that are coupled to each edge of the x N y -elements. Since the adjacent y -elements are also only C \textsuperscript{0} -continuous we know a priori where the discontinuities arise and therefore, the element can be divided for integration purposes at those positions. The basic idea is illustrated in Fig. 9 for the most general case where each edge couples a different number of elements. The reference element is subdivided into several integration subdomains according to element sizes of the neighboring elements. In order to illustrate the subdivision process, the corner vertices of the y -elements are denoted by red circles. Using this approach, it is ensured that in each integration subdomain, the shape functions do not exhibit any discontinuities and hence smooth functions are integrated. As indicated in Fig. 9 , a standard Gauß quadrature is applied for each subdomain and finally the results are added. For the sake of clarity, the numerical integration is indicated by a $2\times 2$ -point Gauß rule in each subdomain. Due to the subdivision of the finite element in the reference domain, the integration points need to be mapped from the canonical domain $[1\times 1]^{d}$ to the integration subdomain. This mapping is achieved by a simple scaling procedure \footnote{ 7 Remark: The computation of the locations of the Gauß points requires a mapping from the canonical domain $[1\times 1]^{d}$ to the integration domain. Both domains are rectangular and therefore, a linear scaling procedure is sufficient, and we do not need to map the points using the shape functions of the x N y -element.} . An analogous approach is taken in fictitious domain methods such as the FCM [84] and in polygonal FEMs [85] . The main advantage of this method is its robustness and suitability for all different cases of transition elements.

4 Patch Test

In the finite element community, the patch test is a widely used and accepted approach to verify the implementation of displacement-type elements [86] . However, according to Zienkiewicz & Taylor [4] (Ch. 10), it can provide much more information about the element. The versatility of the patch test can briefly be summarized in the following points: It is 1. a necessary (sometimes sufficient) condition for assessing the convergence, 2. a means to investigate the (asymptotic) rate of convergence, 3. a check on the robustness of the element, and 4. a possibility to verify the correct programming.

4.1 Versions of the patch test

The original idea of the patch test was introduced by Irons [87] in order to check whether a finite element could exactly reproduce a constant stress state. Today, there are three different versions of the patch test, i.e., A, B, and C [86] : • Version A : All nodes are constrained, i.e., the exact displacement field is prescribed at each node in the computational domain. To this end, we first need to compute an arbitrary solution to a partial differential equation. Then we insert these exact values into the system of equations and compute the difference between the external force vector and the internal force vector (due to the prescribed displacement field). If the method is correctly implemented, the residuum must be equal to zero. In a generic way, this can be expressed as 
 
 $K_{ij}u^{\mathrm{pre}}_{j}-f_{i}=0\,,$ 
 where $\mathbf{K}$ is the stiffness matrix of the patch, $\mathbf{u}^{\mathrm{pre}}$ denotes the prescribed displacement field, and $\mathbf{f}$ represents the external force vector. • Version B : All nodes at the boundary are constrained, i.e., the displacement field is only prescribed at the boundary of the model. The known values are inserted in the system of equations and therefore, an additional force term exists. The system of equations is solved for the unknown displacements, and the numerical solution is compared to the exact/analytic one 
 
 $\tilde{\mathbf{u}}=\tilde{\mathbf{K}}^{-1}\left(\tilde{\mathbf{f}}-\bar{\mathbf{K}}\mathbf{u}^{\mathrm{pre}}\right)\,.$ 
 The tilde-operator $\tilde{\square}$ indicates that the prescribed boundary conditions have been incorporated in the system of equations, while the bar-operator $\bar{\square}$ denotes that only those columns of the stiffness matrix with prescribed boundary conditions are taken into account. • Version C : Minimum number of constraints to avoid rigid body motions are provided (global stiffness matrix is not singular; retains full rank). Neumann boundary conditions are applied such that the exact solution yields, if possible, a polynomial displacement field 
 
 $\mathbf{K}\mathbf{u}=\mathbf{f}\,.$ 
 The computed displacements are then compared against the exact solution. It can be stated that from versions A to C, the significance of the patch test increases, and version C is the most general test that provides an indication of the robustness of the finite element implementation.

4.2 Model definition

Versions B and C of the patch test are used in Sects. 4.3 to 4.6 to investigate the performance of the proposed x N y -element concept. The overarching goal is to show that the theoretically optimal rates of convergence can be retained independent of the set-up of these elements. However, before we start to investigate the properties of our approach, we have to introduce several parameters that will be varied in the parametric studies: 1. Shape functions • Lagrange (SEM) • Legendre ( p -FEM) 2. $n_{\mathrm{nd}}$ : Nodal distribution (Lagrange shape functions) • GLL • GLC 3. $n_{\mathrm{y}}$ : Number of y -elements coupled to an edge of an x -element 4. $n_{\mathrm{s}}$ : Number of successive (hierarchic) mesh refinement steps 5. Polynomial degree of the shape functions \footnote{ 8 For the sake of simplicity, it is assumed that the polynomial degree of the shape functions is identical for all local coordinates.} • $p_{\mathrm{x}}$ • $p_{\mathrm{y}}$ A few words regarding the parameters $n_{\mathrm{y}}$ and $n_{\mathrm{s}}$ are in order: $n_{\mathrm{y}}$ denotes the number of y -elements that are coupled to an edge of an x -element. In the current implementation, this means that a y -element that is adjacent to an x -element in the original mesh will be divided into $n_{\mathrm{y}}\times n_{\mathrm{y}}$ elements. This procedure constitutes one mesh refinement step. The number of such steps is denoted by $n_{\mathrm{s}}$ . The process is referred to as hierarchical as the mesh refinement steps are executed in a sequential fashion. Once the first refinement step has been completed, all elements that are at the interface between the two different domains are subdivided in an identical way as described above. For a better understanding, the parameters $n_{\mathrm{y}}$ and $n_{\mathrm{s}}$ are illustrated in Fig. 10 . Using different combinations of those parameters, we can either enforce a fast transition from a coarse to a fine mesh or have a more gradual decrease in the element size. Although an isotropic subdivision of the y -elements is shown, a graded mesh can also be implemented in a straightforward fashion.

There are different possibilities of how such a mesh refinement can be implemented. One idea is to start from a coarse discretization, in the following referred to as initial or base mesh, where the elements are divided into two sets, one corresponding to the x -elements and the other one to the y -elements. To characterize the created mesh, the number of elements in the base mesh along with the parameters $n_{\mathrm{y}}$ and $n_{\mathrm{s}}$ are specified. The y -elements in the base mesh are subdivided according to the defined values of $n_{\mathrm{y}}$ and $n_{\mathrm{s}}$ (see Fig. 10 ). A second idea would be to import two meshes with different element sizes and to merge both meshes by identifying the interface between x - and y -elements. Keep in mind that in both approaches to generate meshes with transition elements, the x -elements at the common interface with the y -elements must be converted into x N y -elements in order to ensure a conformal/compatible coupling. If several successive subdivisions of the y -elements are conducted, i.e., $n_{\mathrm{s}}\,{\geq}\,2$ , we also have to introduce y N y -elements because we need to couple the same element type.

The examples presented in the following sections are computed with all possible combinations of different shape function types for x - and y -elements (Lagrange-Lagrange, Lagrange-Legendre, Legendre-Lagrange, Legendre-Legendre), nodal distributions for the Lagrange shape functions (GLL, GLC), discretizations ( $n_{\mathrm{y}}\in\{1,2,3,4\}$ , $n_{\mathrm{s}}\in\{1,2,3,4\}$ ), and polynomial degrees ( $p_{\mathrm{x}}\in\{2,3,\ldots,8\}$ , $p_{\mathrm{y}}\in\{2,3,\ldots,8\}$ ). Thus, 6,272 different numerical models need to be analyzed for each benchmark problem. This procedure ensures that the implementation is correct and at the same time, we can investigate the performance of the transition elements in all its details.

4.3 Linear patch test

In the linear patch test, it is checked whether the finite element is capable of exactly representing a constant strain state (linear displacement field), see Ref. [13] (Ch. 4.4, p. 264). This example belongs to the class of version C patch tests as discussed in the introduction to this section. Obviously, the number of possible constant strain states depends on the dimensionality of the model. In Fig. 11 , a typical patch of finite elements that is used in numerical investigations is depicted. The coordinates of the vertices for this model are listed in Table 1 . For this structure, the minimal number of essential (Dirichlet) boundary conditions has been enforced, and loads are applied such that three constant stress states arise. Note that each finite element has to pass the linear patch test in order to ensure convergence, i.e., the numerical solution has to be accurate up to machine precision.

The base mesh for this example consists of five finite elements whereas the four outer elements are classified as x -elements, while the fifth (interior) element is a y -element. Hence, depending on the current values of $n_{\mathrm{s}}$ and $n_{\mathrm{y}}$ , the x -elements are exchanged by suitable transition elements, and in the interior, a certain number of y - and/or y N y -elements is generated (see Fig. 10 for the general procedure).

To assess the performance of the x N y -elements, the three stress components are computed at specific locations in each element. Although it is generally accepted that the stress values are more accurate at the Gauß integration points of order $p\,{-}\,1$ , – with $p$ denoting the polynomial order of the corresponding shape functions of the finite elements – we compute them at the nodes (Lagrange elements) or at points in an equidistant grid (hierarchic element). The reason being that each element must be capable of exactly reproducing a constant stress state independent on the location where the stresses are computed; otherwise, convergence is not ensured. As an error measure, we use the mean relative error of the computed quantities 
 
 $\mathcal{E}_{\mathrm{rel}}=\cfrac{1}{n_{\mathrm{P}}}\sum\limits_{i}^{n_{\mathrm{P}}}\cfrac{|\square_{\mathrm{ref}}-\square_{\mathrm{num}}|}{|\square_{\mathrm{ref}}|}\,,$  (28) 
 where $\square_{\mathrm{ref}}$ and $\square_{\mathrm{num}}$ denote the reference (analytical) and numerical solution, respectively, and $n_{\mathrm{P}}$ is the number of evaluation points (nodes). For each of the computed models, the numerical results show relative errors of less than $10^{-12}$ in the stress components, see also Fig. 12 . The largest error values are generally observed for the largest values of $n_{\mathrm{y}}$ and $n_{\mathrm{s}}$ and in cases where the polynomial degree of the shape functions $p_{\mathrm{x}}$ and $p_{\mathrm{y}}$ is comparably high (i.e., $p\,{\geq}\,7$ ). In Fig. 12 , we exemplarily plot the error values for coupling different element types but with the same polynomial degree. This trend is rather universal and independent of whether $p_{\mathrm{x}}\,{=}\,p_{\mathrm{y}}$ or $p_{\mathrm{x}}\,{\neq}\,p_{\mathrm{y}}$ . The system of equations has been solved using Matlab’s direct solver based on a Cholesky-factorization of the system matrix. The increasing error trend is still subject to investigations and it is so far not entirely clear what is causing this effect. Preliminary studies have revealed that the condition number of the stiffness matrix is growing slightly during the refinement process (about 3 orders of magnitude) and this might be one reason for the observed behavior. Overall, we can still state that the tested transition elements pass the linear patch test and therefore, the convergence of the results is generally ensured, although it is not yet clear what convergence rates can be attained. In this example, the material properties of aluminum (Young’s modulus $E\,{=}\,70\,$ GPa, Poisson’s ratio $\nu\,{=}\,0.3$ ) have been used. As we explicitly prescribe all stress components, the solution does not, however, depend on these properties. Therefore, the material data is only of importance if the displacement field needs to be computed and compared.

4.4 Quadratic patch test

A quadratic patch test has been proposed by Zienkiewicz & Taylor [4] and Lee & Bathe [88] . Here, a ‘constant bending-moment problem’ is suggested which results in a quadratic displacement field. The model including Dirichlet and Neumann boundary conditions is depicted in Fig. 13 . The left edge ( $\Gamma_{1}$ ) is constrained in $x$ -direction, while the lower left vertex is fixed additionally in $y$ -direction. These boundary conditions are sufficient to avoid rigid body motions of the structure. The load (Neumann boundary conditions) has been chosen as a distributed surface traction at the right edge ( $\Gamma_{2}$ ), and the amplitude follows the analytical solution ( $0\leq y\leq c$ , $0\leq x\leq L$ ): 
 
 $\displaystyle\sigma_{\mathrm{xx}}$ $\displaystyle=\cfrac{240}{c}\,y-120\,,$  (29) 
 
 $\displaystyle\sigma_{\mathrm{yy}}$ $\displaystyle=0\,,$  (30) 
 
 $\displaystyle\tau_{\mathrm{xy}}$ $\displaystyle=0\,.$  (31) 
 Note that the stress distribution is independent of both the material’s Young’s modulus $E$ and Poisson’s ratio $\nu$ . These properties only influence the resulting displacement field. For this example, we can easily provide the exact solution for the displacement field, which can be derived in closed-from: 
 
 $\displaystyle u_{\mathrm{x}}$ $\displaystyle=\cfrac{1}{E}\left(\cfrac{240}{c}\,xy-120x\right)\,,$  (32) 
 
 $\displaystyle u_{\mathrm{y}}$ $\displaystyle=\cfrac{1}{E}\left(-\cfrac{120}{c}\,x^{2}-\cfrac{120\nu}{c}\,y^{2}+120\nu y\,\right)\,.$  (33) 


The theoretical displacement field and stress distributions are depicted in Fig. 14 for a Poisson’s ratio of $\nu\,{=}\,0.3$ . To achieve these results in the numerical analysis, we apply the exact tractions at the boundary $\Gamma_{2}$ as external loads. Therefore, a line load acting in the global $x$ -direction is applied to introduce a constant bending moment. According to the analytical solution, the Neumann boundary condition at the right edge takes the following form 
 
 $f_{\mathrm{x},\Gamma_{2}}=\cfrac{240}{c}\,y-120\,.$ 
 As discussed in Sect. 3 , the shape functions of the transition elements are based on tensor product formulations of p - or spectral elements. Therefore, the minimum polynomial degree 
 
 $p_{\mathrm{min}}=\min\{[p_{\mathrm{x}},\,p_{\mathrm{y}}]\}$  (34) 
 determines the order of the highest complete polynomial in the function space. Consequently, it is expected that the asymptotic rate of convergence depends on $p_{\mathrm{min}}$ only. Since all models that are investigated in this article feature a minimum polynomial degree of 2, the numerical solution should be exact. The obtained results for a two-element base mesh are depicted in Fig. 15 . The beam is divided by a skew line with the starting point (4, 0) and the end point (6, 2). Thus, two elements with angular distortion are created. It has to be mentioned that the used mesh is actually a coarser version of the one depicted in Fig. 10 . By agglomerating all x -/ x N y -elements and all y -/ y N y -elements, we obtain only two elements which constitutes the base mesh for this example. The observed behavior of the transition elements for this example is slightly different from the one discussed in Sect. 4.3 . For all models, relative errors of less than $10^{-11}$ in the stresses have been obtained for the quadratic (constant bending) patch test. We can observe that higher polynomial orders of the shape functions tend to also result in increased error levels. Still, a sufficient accuracy with 11 significant digits can be achieved.

4.5 Cubic patch test

A cubic patch test has been suggested by Lee & Bathe in their seminal work on the influence of distortion on the accuracy of finite element simulations [88] . They propose the ‘linear bending-moment problem’ as illustrated in Fig. 16 . The minimum Dirichlet boundary conditions to avoid rigid body motion have been applied at the vertices of the left edge, while at the left ( $\Gamma_{1}$ ) and right end ( $\Gamma_{2}$ ) of the beam distributed loads are acting on the structure. The Neumann boundary conditions have been imposed according to the analytical solution of the problem ( $0\leq x\leq c$ , $0\leq y\leq L$ ): 
 
 $\displaystyle\sigma_{\mathrm{xx}}$ $\displaystyle=\cfrac{240}{cL}\,xy-\cfrac{120}{L}\,x-\cfrac{240}{c}\,y+120\,,$  (35) 
 
 $\displaystyle\sigma_{\mathrm{yy}}$ $\displaystyle=0\,,$  (36) 
 
 $\displaystyle\tau_{\mathrm{xy}}$ $\displaystyle=\cfrac{1}{1+\nu}\left(-\cfrac{138+60\nu}{cL}\,y^{2}+\cfrac{138+60\nu}{L}\,y\right)\,.$  (37) 


Again, it is possible to derive a closed-form solution of the displacement field for the current example: 
 
 $\displaystyle u_{\mathrm{x}}$ $\displaystyle=\cfrac{1}{E}\left(\cfrac{120}{cL}\,x^{2}y-\cfrac{92}{cL}\,y^{3}-\cfrac{60}{L}\,x^{2}-\cfrac{240}{c}\,xy+\cfrac{138}{L}\,y^{2}+120x-\cfrac{46c}{L}\,y\right)\,,$  (38) 
 
 $\displaystyle u_{\mathrm{y}}$ $\displaystyle=\cfrac{1}{E}\left(-\cfrac{40}{cL}\,x^{3}-\cfrac{120\nu}{cL}\,xy^{2}+\cfrac{120}{c}\,x^{2}+\cfrac{120\nu}{L}\,xy+\cfrac{120\nu}{c}\,y^{2}+\cfrac{46c}{L}\,x-120\nu y\right)\,.$  (39) 


The theoretical displacement field and stress distributions are depicted in Fig. 17 . The external load, shear force, and bending moment are modeled as a pressure load and a surface traction. For the numerical test, we assume a Poisson’s ratio of $\nu\,{=}\,0.3$ . Hence, at the left edge of the beam, we apply 
 
 $\displaystyle f_{\mathrm{x},\Gamma_{1}}$ $\displaystyle=\cfrac{240}{c}\,y-120\,,$ 
 
 $\displaystyle f_{\mathrm{y},\Gamma_{1}}$ $\displaystyle=-\cfrac{120}{L}\,y+\cfrac{120}{cL}\,y^{2}\,,$ 
 while 
 
 $f_{\mathrm{y},\Gamma_{2}}=\cfrac{120}{L}\,y-\cfrac{120}{cL}\,y^{2}\,.$ 


The cubic patch test as introduced above can only be passed by transition elements that have a minimum polynomial degree of 3. Therefore, all combinations that include either $p_{\mathrm{x}}\,{=}\,2$ or $p_{\mathrm{y}}\,{=}\,2$ will fail this test and exhibit significantly increased error values. The discretization for this example is identical to the one discussed in Sect. 4.4 . For all models, relative errors of less than $10^{-10}$ in the stresses have been obtained for the cubic (linear bending) patch test, see Fig. 18 . Again, we observe increasing error values for higher orders of the shape functions. Nevertheless, the error levels for transition elements that only feature a quadratically complete ansatz space are several orders of magnitude higher than for those that contain all terms of a complete polynomial of order 3. In the case of a cubically complete shape function, the error is reduced by eight orders of magnitude (error: $10^{-2}$ vs. $10^{-10}$ ; see Fig. 18 ).

4.6 Higher order patch test

It is well-known that when using higher order polynomial basis functions, a higher rate of convergence can be achieved [1] . To assess the (asymptotic) rate of convergence, a higher order patch test can be employed [89] . Here, we prescribe a displacement field of the form 
 
 $\mathbf{u}=\sum\limits_{i}\mathbf{a}_{i}P^{p}_{i}(x,y)\,,\quad\forall\;i\in\{1,2,\ldots,n_{\mathrm{p}}\}$  (40) 


at the boundary of the computational domain (see Fig. 19 ), where $\mathbf{a}_{i}$ denotes unknown parameters of the polynomial functions, and $n_{\mathrm{p}}$ represents the number of monomials in the extension 
 
 $n_{\mathrm{p}}=\cfrac{(p+1)(p+2)}{2}\,,$ 
 while $\mathbf{P}^{p}$ denotes the vector containing all monomials that construct a complete polynomial of order $p$ for the higher order patch test. For a linear patch test it is sufficient to employ $\mathbf{P}^{1}\,{=}\,[1,x,y]^{\mathrm{T}}$ and a cubic patch test requires $\mathbf{P}^{3}\,{=}\,[1,x,y,x^{2},xy,y^{2},x^{3},x^{2}y,xy^{2},y^{3}]^{\mathrm{T}}$ . Once a finite element cannot pass a patch test with a higher order polynomial displacement field as the solution, we have obtained an estimate for the (asymptotic) rate of convergence. This approach can be employed for the version B patch test, where we prescribe the displacement at the whole boundary of the structure. Note that the high order displacement field cannot be chosen arbitrarily but needs to fulfill the equilibrium conditions in order to be admissible for the intended purpose, i.e., the coefficients $\mathbf{a}_{i}$ in Eq. ( 40 ) have to be determined from 
 
 $\mathrm{div}(\boldsymbol{\sigma})=\mathbf{0}\,,$  (41) 
 with $\boldsymbol{\sigma}$ denoting the stress tensor. A detailed derivation of the prescribed displacement fields is provided in B .

The numerical results for the different admissible displacement fields clearly demonstrate that the asymptotic convergence rate of the proposed transition elements depends only on $p_{\mathrm{min}}$ , i.e., the error in the (strain) energy norm should decrease with 
 
 $\mathcal{E}_{\mathrm{SE}}\propto Ch^{p_{\mathrm{min}}}\,,$  (42) 
 where is $C$ a positive constant and $h$ denotes the element size. As an example, we plotted the mean error in the nodal displacements for a seventh-order displacement field in Fig. 20 . In this example, we observe the convergence to the exact solution for a p -refinement. The error decreases monotonically until machine precision is reached for $p_{\mathrm{x}}\,{=}\,p_{\mathrm{y}}\,{=}\,7$ . Since the prescribed displacement field is smooth (without the presence of singularities), optimal rates of convergence are expected. It is noted that the convergence behavior is almost identical for all different transition elements which leads to the conclusion that the methodology has been successfully implemented. With this particular example, it is shown for the first time that the optimal (expected) rates of convergence can be recovered using the transfinite mapping approach. To date, several applications of related approaches have been discussed, but according to the authors’ knowledge, the convergence properties have not been addressed before.

In Sect. 4 , we have shown that the proposed transition elements are capable of passing various patch tests. It is generally accepted in the computational mechanics community that this means convergence will be ensured. By means of the high order patch test we were successful in demonstrating that the theoretically predicted convergence rates can be obtained for problems with smooth solutions. In Sect. 6 , we apply the proposed transition elements to benchmark examples that feature singularities (re-entrant corners).

5 Convergence Rate

Passing the high order patch test is a valuable means to determine the asymptotic rate of convergence for standard finite elements (as discussed in Sect. 4 ) where the associated shape functions are continuously differentiable within the element domain [4] . This assumption is made use of when deriving the error estimates. However, considering transition elements, we must be aware of the fact that the shape functions exhibit kinks at the coupling edges which impact the whole element. Therefore, two examples are selected in this section to demonstrate that the convergence rates, predicted in Sect. 4.6 , are indeed correct. The error in the displacement field is measured in the $L_{2}$ -norm 
 
 $\mathcal{E}_{\mathrm{rel}}^{\mathrm{L}_{2}}=\cfrac{||\mathbf{u}_{\mathrm{ex}}-\mathbf{u}_{\mathrm{num}}||_{\mathrm{L}_{2}(\Omega)}}{||\mathbf{u}_{\mathrm{ex}}||_{\mathrm{L}_{2}(\Omega)}}\,.$  (43) 


5.1 Prescribed eighth order polynomial displacement field

In this subsection, the example of the high order displacement field is revisited, and an h - refinement is executed. The model is the same as reported in Sect. 4.6 . In order to compute the convergence rates, we partition the model at $x\,{=}\,L/2$ and discretize it initially with one x - and one y -element \footnote{ 9 Remark: The initial or base mesh for this method is generated using the commercial FE-software ABAQUS. In the pre-processing stage the elements are divided into two sets, one corresponding to the class of x - and the other to the class of y -elements. This mesh is the basis for all simulations conducted in this paper. The mesh data is in the next step imported to MATLAB, and x N y -elements are set up at the interface between the two domains associated with the different element types. As a last step in the mesh generation process, the y -elements are divided according to the parameters $n_{\mathrm{y}}$ and $n_{\mathrm{s}}$ which also entails setting up y N y -elements if $n_{\mathrm{s}}\,{\geq}\,2.$} . This two-element mesh is refined six times by subdividing each quadrilateral element into four smaller ones. Hence, the finest base mesh contains 8,192 finite elements, where one half are x - and the other y -elements. For the purpose of this study, we choose the following parameters: $n_{\mathrm{y}}\,{=}\,2$ , $n_{\mathrm{s}}\,{=}\,1$ , $p_{\mathrm{x}},p_{\mathrm{y}}\,{=}\,1,2,\ldots,8$ . The x -elements are of the spectral type (Lagrange shape functions), while the y -elements are p -elements (Legendre shape functions).

The results of the convergence analysis are depicted in Fig. 21 for two different set-ups. In one example, only the polynomial degree of the y -elements is varied, while the polynomial degree of the x -elements is fixed at $p_{\mathrm{x}}\,{=}\,8$ . The other idea is to increase both $p_{\mathrm{x}}$ and $p_{\mathrm{y}}$ simultaneously. Overall, a similar behavior as in the patch test examples is seen. For very fine meshes, the implementation seems to be suboptimal in that round-off errors accumulate and thus dominate the overall error. Bear in mind that the numerical rate of convergence can only be determined for models where at least one of the polynomial degrees is less than eight, as otherwise the exact solution is already contained in the ansatz space. The theoretically optimal convergence rate (with respect to the number of degrees of freedom $n_{\mathrm{DOF}}$ ) is predicted as 
 
 $\chi=\cfrac{\log_{10}\left(\mathcal{E}_{\mathrm{rel,2}}^{\mathrm{L}_{2}}/\mathcal{E}_{\mathrm{rel,1}}^{\mathrm{L}_{2}}\right)}{\log_{10}\left(n_{\mathrm{DOF,2}}/n_{\mathrm{DOF,1}}\right)}=\cfrac{p_{\mathrm{min}}+1}{2}\,.$  (44) 
 In Fig. 21 , we clearly observe the expected fan-shape of all curves. The rates of convergence are listed in Table 2 and confirm our statements provided in Sect. 4.6 , i.e., optimal rates of convergence are attained.

5.2 Infinite two-dimensional domain with circular hole under uni-axial loading

The second example to study the convergence rates of the proposed transition elements is the well-known infinite domain with a circular hole under uni-axial loading as depicted in Fig. 22 . The reason behind this choice is twofold: (i) existence of an analytical solution and (ii) smooth trigonometric displacement field, i.e., the exact solution is not contained in the ansatz of the x N y -elements. The analytical solution is given in polar coordinates as


 
 $\displaystyle u_{\mathrm{x}}(r,\theta)$ $\displaystyle=\cfrac{\sigma_{0}a}{8G}\left[\cfrac{r}{a}\,(\kappa+1)\cos(\theta)+\cfrac{2a}{r}\,[(1+\kappa)\cos(\theta)+\cos(3\theta)]-\cfrac{2a^{3}}{r^{3}}\,\cos(3\theta)\right]\,,$  (45) 
 
 $\displaystyle u_{\mathrm{y}}(r,\theta)$ $\displaystyle=\cfrac{\sigma_{0}a}{8G}\left[\cfrac{r}{a}\,(\kappa-3)\sin(\theta)+\cfrac{2a}{r}\,[(1-\kappa)\sin(\theta)+\sin(3\theta)]-\cfrac{2a^{3}}{r^{3}}\,\sin(3\theta)\right]\,.$  (46) 
 Here, $\sigma_{0}$ is a uniform uni-axial loading, $G$ denotes the shear modulus, and $\kappa$ is Kolosov’s constant \footnote{ 10 Remark: The parameter $\kappa$ takes different values depending on whether a plane stress or strain problem is investigated. In the first case, we obtain $\kappa=\cfrac{3-\nu}{1+\nu}$ , while in the second one the following definition is valid $\kappa=3-4\nu$ with Poisson’s ratio $\nu$ .} . The material parameters for this example correspond to that of aluminum ( $E\,{=}\,70\,$ GPa, $\nu\,{=}\,0.3$ ). The radius of the circular hole is given by $a$ , whereas $r$ and $\theta$ represent the polar coordinates. The transformation between the Cartesian coordinate system used for the simulation and the polar one is given as 
 
 $\displaystyle x$ $\displaystyle=r\cos{\theta}\,,\quad$ $\displaystyle\quad y$ $\displaystyle=r\sin(\theta)\,,$  (47) 
 
 $\displaystyle r$ $\displaystyle=\sqrt{x^{2}+y^{2}}\,,\quad$ $\displaystyle\quad\theta$ $\displaystyle=\mathrm{atan2}\left(\cfrac{y}{x}\right)\,.$  (48) 


In order to avoid any effect related to the geometry approximation on the convergence rates, only the red hatched part is modeled (see Fig. 22 ) and the exact displacements are prescribed at the boundary of the domain analogously to the previous examples. The base mesh for the h -refinement consists of two elements, i.e., one x -element and one y -element. Note that when using a linear or quadratic geometry approximation of the circular hole, the geometry error will dominate the convergence behavior [3] . Thus, an exact or at least very accurate description of the circle by means of the blending function method or quasi-regional mapping would be necessary [38] . This, however, is out of the scope of the present article and therefore, we decided for a simple domain with a structured mesh. To this end, elements are square-shaped, the computational domain is rectangular and has the dimensions $2a\times 4a$ . The obtained numerical results are illustrated in Fig. 23 and compiled in Table 3 . Also in this example, the theoretically optimal rates of convergence are recovered.

6 Application to Problems with Singularities

It is well-known that exponential rates of convergence can only be attained by a pure p -refinement approach if the solution is smooth within the computational domain [1] . However, if singularities are present, only the combination of h - and p -refinement strategies can achieve high (theoretically optimal) convergence rates. Unfortunately, such an hp -adaptive procedure is rather difficult to implement [90] , and standard procedures result in so-called hanging nodes that need to be constrained. This drawback can be circumvented either by employing the refine-by-superposition approach presented by Zander [14] instead of the classical refine-by-replacement methodology or by using the proposed x N y -transition elements. As discussed in the previous sections, conformal coupling along the element boundary is easily achieved without the need for imposing additional constraints. Thus, a local mesh refinement as required for problems with non-smooth solution characteristics can be implemented in a straightforward fashion. In the remainder of this section, we use the error in the energy norm to assess the performance of the transition elements in comparison to spectral elements based on a GLL nodal distribution. Thus, the error measure is defined as 
 
 $\mathcal{E}_{\mathrm{SE}}=\sqrt{\cfrac{\mathbf{u}_{\mathrm{ov}}^{\mathrm{T}}\tilde{\mathbf{K}}\mathbf{u}_{\mathrm{ov}}-\mathbf{u}_{\mathrm{num}}^{\mathrm{T}}\mathbf{K}\mathbf{u}_{\mathrm{num}}}{\mathbf{u}_{\mathrm{ov}}^{\mathrm{T}}\tilde{\mathbf{K}}\mathbf{u}_{\mathrm{num}}}}\,,$  (49) 
 where $\mathbf{K}$ is the stiffness matrix and $\mathbf{u}$ the displacement vector. The subscripts $\square_{\mathrm{ov}}$ and $\square_{\mathrm{num}}$ denote the reference (overkill solution: fine mesh with high polynomial degree of the shape functions) and numerical solutions, respectively.

6.1 Cantilever beam

The first example that exhibits singular points in the solution is the cantilever beam shown in Fig. 24 . In order to illustrate the performance of the proposed transition element, its results are compared to an established numerical method. To this end, the cantilever beam is also analyzed using the SEM. Considering the proposed transition element, a coupling of spectral elements has been chosen due to the fact the different types of coupling have shown a very similar performance in the patch test discussed in Sect. 4 .

The discretization of the numerical model is based on the coarse mesh depicted in Fig. 10 consisting of 20 (angularly) distorted quadrilateral finite elements. Finer meshes are constructed from this base discretization by dividing each element into four smaller ones. Thus, the spectral element mesh is constructed from the base mesh by refining it twice (see Fig. 25c ). The SEM results are obtained by executing a simple p -refinement procedure. Two different discretizations that are utilized in conjunction with the spectral–spectral transition elements are depicted in Figs. 25a and 25b . Here, the initial discretization is chosen, and only the two elements adjacent to the corner singularities are refined. The first mesh is constructed using the parameter combination $n_{\mathrm{s}}\,{=}\,2$ and $n_{\mathrm{y}}\,{=}\,2$ , while the second mesh corresponds to $n_{\mathrm{s}}\,{=}\,8$ and $n_{\mathrm{y}}\,{=}\,2$ . It is noted that the reference solution for this analysis was obtained using a fine x N x -discretization – the base mesh has been refined five times resulting in 20,480 elements – where spectral elements were coupled to spectral elements. Additionally, the two elements near the singular points have been successively refined eight times ( $n_{\mathrm{s}}\,{=}\,8$ , $n_{\mathrm{y}}\,{=}\,2$ ). The polynomial degree of the shape functions was set to $p\,{=}\,10$ . Thus, the final analysis mesh for the reference solution contains 20,528 elements (see Fig. 26 ) with 4,113,992 DOFs.

In Fig. 27 , the advantages of a local mesh refinement are clearly observed. A uniform p -refinement on the spectral element mesh leads to an algebraic convergence which is related to the two singular points. By refining the mesh near the singularities, we achieve an exponential convergence rate in the pre-asymptotic range as the error in the smooth part of the solution is significantly decreased. In the asymptotic range, an algebraic convergence that is limited by the singularity is observed analogous to the SEM curve. Another point to notice is that more layers of refinement near the singular points result in a slightly increased number of DOFs but also in a lower error. By using more hierarchic refinement steps, the pre-asymptotic range of convergence is extended. In Ref. [1] , it is shown that if a proper hp -refinement strategy is employed, we are able to recover exponential rates of convergence during the whole refinement process. To this end, the mesh has to be graded with a ratio of 0.15:0.85 and the polynomial degree must be decreased near the singularity.

6.2 L-shaped domain

The L-shaped domain is a classical example to demonstrate the adverse effects of a singular point due to the existence of a re-entrant corner. The geometry including all boundary conditions is depicted in Fig. 28 . For the numerical example presented in this section the dimension is chosen as: $c\,{=}\,20$ .

The discretization of this structure is set up in a similar fashion as the one reported in the previous example. The initial mesh consists of 12 square-shaped quadrilateral finite elements and finer discretizations are generated by dividing each element into four. Also in this example, the results obtained based on a simple p -refinement in combination with the SEM are compared with spectral–spectral transition elements. The different discretizations that are the basis for the p -refinement are depicted in Fig. 29 , where 2 and 8 mesh refinement levels ( $n_{\mathrm{s}}$ ) have been employed for the transition elements and the SEM grid has been generated by refining the initial mesh twice.

The numerical results show a similar behavior to that discussed in Sect. 6.1 . Again, the advantages of a local mesh refinement near the re-entrant corner are observed (see Fig. 30 ). Using the same number of DOFs, the error in the energy norm can be decreased by up to two orders of magnitude. Note that the reference solution for this analysis was obtained using a fine x N x -discretization where spectral elements were coupled with spectral elements. The fine mesh was generated from the initial one by refining it five times resulting in 12,288 finite elements. Additionally, the two elements near the singular points have been refined eight times successively ( $n_{\mathrm{s}}\,{=}\,8$ , $n_{\mathrm{y}}\,{=}\,2$ ). The polynomial degree of the shape functions was set to $p\,{=}\,10$ . Thus, the final analysis mesh for the reference solution contains 12,360 elements (see Fig. 31 ) with 2,477,762 DOFs.

Although the obtained results are very promising, they can be significantly improved by implementing an automatic mesh generation capable of providing a geometrically graded mesh. A further improvement can also be obtained by means of an adaptive refinement scheme based on a suitable error estimator [92] . Additionally, the polynomial degree of the shape functions near the singularity should be decreased with each hierarchical sub-division of the elements. Thus, fewer DOFs are “wasted” near the re-entrant corner where the solution is inaccurate due to the assumption of the numerical model.

7 Summary

In this contribution, we extended the concept of transfinite mapping and transition elements to achieve a compatible coupling strategy between various element types and elements of different sizes and polynomial orders. This procedure is especially useful if a local mesh refinement is required in order to adapt the discretization to the requirements of the solution. The obtained numerical results clearly demonstrate that the theoretical optimal rates of convergence can be achieved, i.e., the rate of convergence is proportional to the minimum polynomial degree $p_{\mathrm{min}}$ of the x - or y -shape functions. Therefore, the x N y -element concept can be employed to locally refine the discretization where needed without loss of accuracy, which is observed when using multi-point constraints or other coupling methods. 
 
 At the current stage, there is still the problem of an efficient mesh generation for these transition elements. The discretizations in this article have been generated by using Abaqus as a pre-processor. To this end, a coarse base mesh is generated and imported to Matlab, where specified elements are successively refined according to the selected values of $n_{\mathrm{s}}$ and $n_{\mathrm{y}}$ . Another idea would be to create two meshes with different element sizes and to merge them in regions where a mesh refinement is needed. In this case, it is also straightforward to identify the x - and y -elements. In a further step, x -elements that are adjacent to y -elements are changed to x N y -elements. Especially for complex geometries and three-dimensional models, this procedure is very cumbersome and not feasible. Consequently, powerful mesh generators that are capable of accounting for transition elements are one prerequisite for the successful use of this concept. 
 
 Future research activities are directed at investigating the performance of this concept in dynamic analyses. Here, it is of great interest to see if these elements can also be used in conjunction with explicit time integration approaches. To this end, it has to be possible to diagonalize the mass matrix [80] . A natural area of application of the proposed method would be the analysis of wave propagation phenomena in layered media where the local mesh refinement capability could be exploited. 
 
 It is, furthermore, intended to extend the x N y -approach to fictitious domain methods such as the finite cell method (FCM) [93] . Although the discretization is not geometry-conforming, a certain number of elements are still required to capture the complex displacement/stress field near geometrically complex details of the microstructure [94] .

Appendix A Shape functions of a 12-node/mode transition element

In Sect. 2 a detailed description of the derivation of high order transition elements is given. These elements are either based on nodal or modal shape functions and have the ability to conformally couple different finite elements at specific edges. In this section, it is shown how transition element shape functions are derived for particular cases. As an illustrative example, we derive the shape functions for a piecewise bi-quadratic transition element with 12 nodes/modes (see Fig. 2 ). Since this element does not feature interior nodes/modes, it can be seen as a Serendipity-type/trunk space transition element.

A.1 One-dimensional standard shape functions

The basis for the derivation of the shape functions for the 12-node/mode transition element are the one-dimensional quadratic Lagrange shape functions [5] : 
 
  
 ${}^{\mathrm{La}}N^{\mathrm{2}}_{1}(\xi)$ $\displaystyle=\cfrac{1}{2}(\xi^{2}-\xi)\,,$  (50a) 
 ${}^{\mathrm{La}}N^{\mathrm{2}}_{2}(\xi)$ $\displaystyle=(1-\xi^{2})\,,$  (50b) 
 ${}^{\mathrm{La}}N^{\mathrm{2}}_{3}(\xi)$ $\displaystyle=\cfrac{1}{2}(\xi^{2}+\xi)\,,$  (50c) 
 and the one-dimensional hierarchic shape functions (based on the normalized integrals of the Legendre polynomials) of order 2 ( p -FEM) [1] : 
 
  
 ${}^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\xi)$ $\displaystyle=\cfrac{1}{2}(1-\xi)\,,$  (51a) 
 ${}^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\xi)$ $\displaystyle=\cfrac{1}{4}\sqrt{6}(\xi^{2}-1)\,,$  (51b) 
 ${}^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\xi)$ $\displaystyle=\cfrac{1}{2}(1+\xi)\,.$  (51c) 
 These are the one-dimensional standard shape functions that describe the variation of the multi-dimensional ones at the edges of an element and are, therefore, of utmost importance in the derivation of transition elements.

A.2 Two-dimensional standard shape functions

In addition to the one-dimensional shape functions defined above, we also need the shape functions of the well-known 8-node quadrilateral element (see Fig. 2 ) [4] : 
 
  
 ${}^{\mathrm{s}}N^{*}_{1}(\xi,\eta)$ $\displaystyle=-\cfrac{1}{4}(1-\xi)(1-\eta)(1+\xi+\eta)\,,$  (52a) 
 ${}^{\mathrm{s}}N^{*}_{2}(\xi,\eta)$ $\displaystyle=-\cfrac{1}{4}(1+\xi)(1-\eta)(1-\xi+\eta)\,,$  (52b) 
 ${}^{\mathrm{s}}N^{*}_{3}(\xi,\eta)$ $\displaystyle=-\cfrac{1}{4}(1+\xi)(1+\eta)(1-\xi-\eta)\,,$  (52c) 
 ${}^{\mathrm{s}}N^{*}_{4}(\xi,\eta)$ $\displaystyle=-\cfrac{1}{4}(1-\xi)(1+\eta)(1+\xi-\eta)\,,$  (52d) 
 ${}^{\mathrm{s}}N^{*}_{6}(\xi,\eta)$ $\displaystyle=\cfrac{1}{2}(1-\xi^{2})(1-\eta)\,,$  (52e) 
 ${}^{\mathrm{s}}N^{*}_{9}(\xi,\eta)$ $\displaystyle=\cfrac{1}{2}(1+\xi)(1-\eta^{2})\,,$  (52f) 
 ${}^{\mathrm{s}}N^{*}_{11}(\xi,\eta)$ $\displaystyle=\cfrac{1}{2}(1-\xi^{2})(1+\eta)\,,$  (52g) 
 ${}^{\mathrm{s}}N^{*}_{12}(\xi,\eta)$ $\displaystyle=\cfrac{1}{2}(1-\xi)(1-\eta^{2})\,,$  (52h) 


and the shape functions of the quadrilateral p -element which is based on the trunk space formulation (similar to the Serendipity ansatz space) [1] : 
 
  
 ${}^{\mathrm{t}}N^{*}_{1}(\xi,\eta)$ $\displaystyle=\,N_{1}^{1}(\xi)N_{1}^{1}(\eta)\,,$  (53a) 
 ${}^{\mathrm{t}}N^{*}_{2}(\xi,\eta)$ $\displaystyle=\,N_{2}^{1}(\xi)N_{1}^{1}(\eta)\,,$  (53b) 
 ${}^{\mathrm{t}}N^{*}_{3}(\xi,\eta)$ $\displaystyle=\,N_{2}^{1}(\xi)N_{2}^{1}(\eta)\,,$  (53c) 
 ${}^{\mathrm{t}}N^{*}_{4}(\xi,\eta)$ $\displaystyle=\,N_{1}^{1}(\xi)N_{2}^{1}(\eta)\,,$  (53d) 
 ${}^{\mathrm{t}}N^{*}_{6}(\xi,\eta)$ $\displaystyle=\,^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\xi)N_{1}^{1}(\eta)\,,$  (53e) 
 ${}^{\mathrm{t}}N^{*}_{9}(\xi,\eta)$ $\displaystyle=\,^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\eta)N_{2}^{1}(\xi)\,,$  (53f) 
 ${}^{\mathrm{t}}N^{*}_{11}(\xi,\eta)$ $\displaystyle=\,^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\xi)N_{2}^{1}(\eta)\,,$  (53g) 
 ${}^{\mathrm{t}}N^{*}_{12}(\xi,\eta)$ $\displaystyle=\,^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\eta)N_{1}^{1}(\xi)\,.$  (53h) 
 Studying the composition of the shape functions of an 8-node serendipity element corresponding to the edge mid-side nodes (6, 9, 11, 12) given by Eq. ( 52 ), we observe that these are derived using the linear blending discussed in Sect. 3 . The one-dimensional shape function for a mid-side node is just multiplied by a linear blending term 
 
  
 $\displaystyle N_{1}^{1}(\xi)$ $\displaystyle=\cfrac{1}{2}(1-\xi)\,,$  (54a) 
 $\displaystyle N_{2}^{1}(\xi)$ $\displaystyle=\cfrac{1}{2}(1+\xi)\,.$  (54b) 
 Note that, in the following, the numbering scheme indicated in Figs. 2 and 2 is assumed.

A.3 Lagrange-Lagrange: Nodal shape functions

The first example to demonstrate the derivation of transition element shape functions is a bi-quadratic 12-node transition element. Here, only Lagrange-type nodal shape functions are employed. The basis functions for the derivation are given by Eqs. ( 50 ) and ( 52 ), accordingly.

A.3.1 Shape functions on the boundary

In the first step, the function $\bar{u}(\xi,\eta)$ , describing the displacement field on the boundary of the element, needs to be constructed – see Eq. ( 16 ). The shape functions of edges $E_{1}$ and $E_{2}$ (see the definition of the reference element provided in Fig. 8 ) are generated as piecewise quadratic polynomials, while $E_{3}$ and $E_{4}$ retain the standard quadratic shape functions. By means of this example, we will show that merely shape functions on the “coupling” edges need to be adjusted while the other shape functions can be adopted from the basis element. Therefore, only a limited number of shape functions are modified. Accordingly, the interpolations along the four element edges are given as 
 
 $\displaystyle\text{E}_{1}:\;\bar{N}_{i}(\xi)$ $\displaystyle=\begin{cases}{}^{\mathrm{La}}N^{\mathrm{2}}_{1}(\check{\xi}_{1})&\text{for }i=1,\text{ node \#1}\,,\\
{}^{\mathrm{La}}N^{\mathrm{2}}_{2}(\check{\xi}_{1})&\text{for }i=2,\text{ node \#5}\,,\\
\begin{cases}{}^{\mathrm{La}}N^{\mathrm{2}}_{3}(\check{\xi}_{1})\\
{}^{\mathrm{La}}N^{\mathrm{2}}_{1}(\check{\xi}_{2})\\
\end{cases}&\text{for }i=3,\text{ node \#6}\,,\\
{}^{\mathrm{La}}N^{\mathrm{2}}_{2}(\check{\xi}_{2})&\text{for }i=4,\text{ node \#7}\,,\\
{}^{\mathrm{La}}N^{\mathrm{2}}_{3}(\check{\xi}_{2})&\text{for }i=5,\text{ node \#2}\,,\end{cases}$  (55) 
 
 $\displaystyle\text{E}_{2}:\;\hat{N}_{i}(\eta)$ $\displaystyle=\begin{cases}{}^{\mathrm{La}}N^{\mathrm{2}}_{1}(\check{\eta}_{1})&\text{for }i=1,\text{ node \#2}\,,\\
{}^{\mathrm{La}}N^{\mathrm{2}}_{2}(\check{\eta}_{1})&\text{for }i=2,\text{ node \#8}\,,\\
\begin{cases}{}^{\mathrm{La}}N^{\mathrm{2}}_{3}(\check{\eta}_{1})\\
{}^{\mathrm{La}}N^{\mathrm{2}}_{1}(\check{\eta}_{2})\\
\end{cases}&\text{for }i=3,\text{ node \#9}\,,\\
{}^{\mathrm{La}}N^{\mathrm{2}}_{2}(\check{\eta}_{2})&\text{for }i=4,\text{ node \#10}\,,\\
{}^{\mathrm{La}}N^{\mathrm{2}}_{3}(\check{\eta}_{2})&\text{for }i=5,\text{ node \#3}\,,\end{cases}$  (56) 
 
 $\displaystyle\text{E}_{3}:\;\tilde{N}_{i}(\xi)$ $\displaystyle=\begin{cases}{}^{\mathrm{La}}N^{\mathrm{2}}_{1}(\xi)&\text{for }i=1,\text{ node \#4}\,,\\
{}^{\mathrm{La}}N^{\mathrm{2}}_{2}(\xi)&\text{for }i=2,\text{ node \#11}\,,\\
{}^{\mathrm{La}}N^{\mathrm{2}}_{3}(\xi)&\text{for }i=3,\text{ node \#3}\,,\end{cases}$  (57) 
 
 $\displaystyle\text{E}_{4}:\;\breve{N}_{i}(\eta)$ $\displaystyle=\begin{cases}{}^{\mathrm{La}}N^{\mathrm{2}}_{1}(\eta)&\text{for }i=1,\text{ node \#1}\,,\\
{}^{\mathrm{La}}N^{\mathrm{2}}_{2}(\eta)&\text{for }i=2,\text{ node \#12}\,,\\
{}^{\mathrm{La}}N^{\mathrm{2}}_{3}(\eta)&\text{for }i=3,\text{ node \#4}\,.\end{cases}$  (58) 
 Considering the expressions to compute the shape functions on the divided edges $E_{1}$ and $E_{2}$ , we introduced new coordinates $\check{\xi}_{1}$ , $\check{\xi}_{2}$ , $\check{\eta}_{1}$ , and $\check{\eta}_{2}$ . These coordinates are defined by a simple linear transformation from $[-1,0]$ or $[0,1]$ to the reference domain $[-1,1]$ . Consequently, $\check{\xi}_{1}$ and $\check{\xi}_{2}$ are given as 
 
 $\displaystyle\check{\xi}_{1}$ $\displaystyle=2\xi+1\,,\quad\xi\in[-1,0]\,,$  (59) 
 
 $\displaystyle\check{\xi}_{2}$ $\displaystyle=2\xi-1\,,\quad\xi\in[0,1]\,.$  (60) 
 The same formulae also apply to $\check{\eta}_{1}$ and $\check{\eta}_{2}$ . In cases where the edge is divided into more elements, the following general mapping functions can be used 
 
 $\check{\xi}_{k}=\cfrac{2\xi-\xi_{k}-\xi_{k+1}}{\xi_{k+1}-\xi_{k}}\,,\quad\xi\in[\xi_{k},\xi_{k+1}]\,.$  (61) 
 This expression can be straightforwardly derived by inverting the one-dimensional linear mapping using standard finite element shape functions 
 
 $\xi=N_{1}^{1}(\check{\xi}_{k})\xi_{k}+N_{2}^{1}(\check{\xi}_{k})\xi_{k+1}\,.$  (62) 
 Note that the shape functions corresponding to the edge mid-side nodes #6 and #9 are piecewise quadratic polynomials. Consequently, a weak discontinuity (kink) in the displacement field is observed. This, however, results in a jump in the first derivative which is directly related to the computed stress field. The shape functions for the edges are exemplarily sketched in Figs. 4 and 4 .

A.3.2 Application of the projection operators

After having discussed the functions on the edges of the transition element, we can project these functions into the interior of the element using the projection operators $\mathcal{P}_{\xi}[\square]$ , $\mathcal{P}_{\eta}[\square]$ , and $\mathcal{P}_{\xi}[\mathcal{P}_{\eta}[\square]]$ . The general operators are simplified significantly when linear blending functions are deployed and therefore, Eqs. ( 20 ) to ( 27 ) are used in this section.

Shape functions of the corner vertices

As mentioned before, when using linear blending functions, only the shape functions of the corner vertices are influenced by the product projector $\mathcal{P}_{\xi}[\mathcal{P}_{\eta}[\square]]$ . According to Eqs. ( 20 ) to ( 23 ) these shape functions are 
 
 $\displaystyle N_{1}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\xi)\,^{\mathrm{La}}N^{\mathrm{2}}_{1}(\eta)$ $\displaystyle+N_{1}^{1}(\eta)\,^{\mathrm{La}}N^{\mathrm{2}}_{1}(\check{\xi}_{1})$ $\displaystyle-N_{1}^{1}(\xi)N_{1}^{1}(\eta)\,,$  (63) 
 
 $\displaystyle N_{2}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\xi)\,^{\mathrm{La}}N^{\mathrm{2}}_{1}(\check{\eta}_{1})$ $\displaystyle+N_{1}^{1}(\eta)\,^{\mathrm{La}}N^{\mathrm{2}}_{3}(\check{\xi}_{2})$ $\displaystyle-N_{2}^{1}(\xi)N_{1}^{1}(\eta)\,,$  (64) 
 
 $\displaystyle N_{3}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\xi)\,^{\mathrm{La}}N^{\mathrm{2}}_{3}(\check{\eta}_{2})$ $\displaystyle+N_{2}^{1}(\eta)\,^{\mathrm{La}}N^{\mathrm{2}}_{3}(\xi)$ $\displaystyle-N_{2}^{1}(\xi)N_{2}^{1}(\eta)\,,$  (65) 
 
 $\displaystyle N_{4}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\xi)\,^{\mathrm{La}}N^{\mathrm{2}}_{3}(\eta)$ $\displaystyle+N_{2}^{1}(\eta)\,^{\mathrm{La}}N^{\mathrm{2}}_{1}(\xi)$ $\displaystyle-N_{1}^{1}(\xi)N_{2}^{1}(\eta)=\!^{\mathrm{s}}N^{*}_{4}(\xi,\eta)\,.$  (66) 
 It is left to the reader to ascertain that the shape function belonging to node #4 is indeed the function given in Eq. ( 52d ). The shape functions of the other nodes are altered/adjusted due to the presence of the piecewise quadratic polynomials featured on edges $E_{1}$ and $E_{2}$ . The definition of the individual shape functions already indicates a difference in the intervals in which they are defined by the use of the mapped coordinates $\check{\square}$ . The shape functions for the corner vertices are visualized in Figs. 5a to 5d . The shape functions corresponding to the nodes that are associated with only one edge are obtained by applying either the projection operator $\mathcal{P}_{\xi}[\square]$ to shape functions living on edges $E_{2}$ and $E_{4}$ or the projection operator $\mathcal{P}_{\eta}[\square]$ to shape functions living on edges $E_{1}$ and $E_{3}$ , respectively. Therefore, the shape functions are given as 
 
 $\displaystyle N_{5}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\eta)\,^{\mathrm{La}}N^{\mathrm{2}}_{2}(\check{\xi}_{1})=\!^{\mathrm{s}}N^{*}_{6}(\check{\xi}_{1},\eta)\,,$  (67) 
 
 $\displaystyle N_{6}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\eta)\begin{cases}{}^{\mathrm{La}}N^{\mathrm{2}}_{3}(\check{\xi}_{1})\,,\\
{}^{\mathrm{La}}N^{\mathrm{2}}_{1}(\check{\xi}_{2})\,,\\
\end{cases}$  (68) 
 
 $\displaystyle N_{7}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\eta)\,^{\mathrm{La}}N^{\mathrm{2}}_{2}(\check{\xi}_{2})=\!^{\mathrm{s}}N^{*}_{6}(\check{\xi}_{2},\eta)\,,$  (69) 
 
 $\displaystyle N_{8}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\xi)\,^{\mathrm{La}}N^{\mathrm{2}}_{2}(\check{\eta}_{1})=\!^{\mathrm{s}}N^{*}_{9}(\xi,\check{\eta}_{1})\,,$  (70) 
 
 $\displaystyle N_{9}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\xi)\begin{cases}{}^{\mathrm{La}}N^{\mathrm{2}}_{3}(\check{\eta}_{1})\,,\\
{}^{\mathrm{La}}N^{\mathrm{2}}_{1}(\check{\eta}_{2})\,,\\
\end{cases}$  (71) 
 
 $\displaystyle N_{10}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\xi)\,^{\mathrm{La}}N^{\mathrm{2}}_{2}(\check{\eta}_{2})=\!^{\mathrm{s}}N^{*}_{9}(\xi,\check{\eta}_{2})\,,$  (72) 
 
 $\displaystyle N_{11}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\eta)\,^{\mathrm{La}}N^{\mathrm{2}}_{2}(\xi)=\!^{\mathrm{s}}N^{*}_{11}(\xi,\eta)\,,$  (73) 
 
 $\displaystyle N_{12}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\xi)\,^{\mathrm{La}}N^{\mathrm{2}}_{2}(\eta)=\!^{\mathrm{s}}N^{*}_{12}(\xi,\eta)\,.$  (74) 
 All the shape functions of the derived transition element are illustrated in Fig. 5 . Note that if we were to derive the shape functions on the basis of a bi-quadratic tensor product finite element featuring 9 nodes, we would have to utilize quadratic blending functions as indicated in Fig. 6b . Otherwise, the shape functions for the edge mid-side nodes and the interior/bubble node would be incorrect \footnote{ 11 Remark: The presented approach is very general, and the standard Serendipity and spectral elements can be easily obtained as special cases. For spectral elements, we simply choose the same interpolation along all four edges. To derive transition elements, it is also possible to only set up the required shape functions at the edges to couple different element types without introducing interior nodes/modes. Those are, however, needed to ensure completeness of the polynomial basis functions and thus, theoretically optimal convergence rates.} .

Studying the shape functions for the 12-node bi-quadratic transition element, we observe that the shape functions associated with nodes #4, 11, and 12 are identical with the standard shape functions of an 8-node bi-quadratic Serendipity finite element. The other shape functions have been adjusted in order to ensure a C \textsuperscript{0} -continuous approximation of the displacement field between adjacent elements. Using this element type, a 1-irregular mesh refinement based on quadratic elements can be executed (see Fig. 3 ).

A.4 Lagrange-Legendre: Mixed nodal/modal shape functions

The second case that is addressed in this section uses the proposed transition element to couple nodal and modal elements, i.e., we aim at a conformal/compatible coupling of an 8-node Serendipity finite element with two bi-quadratic p -elements. The explanations regarding the derivation of the shape functions for this particular transition element will be shorter as the same steps are followed which have been discussed in detail in the previous section.

One important aspect that needs to be taken into consideration when using high order hierarchic shape functions is to ensure a C \textsuperscript{0} -continuous approximation of the solution field. To this end, the local orientation has to be taken into account and different sign-factors have to be introduced. A comprehensive description of how to achieve a conformal coupling is provided in Ref. [6] . In the following, we assume that the orientation of adjacent edges is identical and therefore, no correction has to be executed.

The construction of the shape functions of this 12-node \footnote{ 12 Note that in this context it is conceptually wrong to refer to the transition element as a 12-node element. Considering, hierarchic p -version shape functions we do not have physical nodes as all interior shape functions are only related to high order unknowns instead of displacements. However, for a lack of better notation we will retain this name in the remainder of the article.} transition element follows the procedure outlined in the previous section. The basis functions for the derivation are given by Eqs. ( 50 ), ( 51 ) and ( 52 ). For the numbering of the nodes please see Fig. 2 . The interpolations along the four edges of the transition element are given as 
 
 $\displaystyle\text{E}_{1}:\;\bar{N}_{i}(\xi)$ $\displaystyle=\begin{cases}{}^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\check{\xi}_{1})&\text{for }i=1,\text{ node \#1}\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\check{\xi}_{1})&\text{for }i=2,\text{ node \#5}\,,\\
\begin{cases}{}^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\check{\xi}_{1})\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\check{\xi}_{2})\\
\end{cases}&\text{for }i=3,\text{ node \#6}\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\check{\xi}_{2})&\text{for }i=4,\text{ node \#7}\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\check{\xi}_{2})&\text{for }i=5,\text{ node \#2}\,,\end{cases}$  (75) 
 
 $\displaystyle\text{E}_{2}:\;\hat{N}_{i}(\eta)$ $\displaystyle=\begin{cases}{}^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\check{\eta}_{1})&\text{for }i=1,\text{ node \#2}\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\check{\eta}_{1})&\text{for }i=2,\text{ node \#8}\,,\\
\begin{cases}{}^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\check{\eta}_{1})\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\check{\eta}_{2})\\
\end{cases}&\text{for }i=3,\text{ node \#9}\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\check{\eta}_{2})&\text{for }i=4,\text{ node \#10}\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\check{\eta}_{2})&\text{for }i=5,\text{ node \#3}\,,\end{cases}$  (76) 
 
 $\displaystyle\text{E}_{3}:\;\tilde{N}_{i}(\xi)$ $\displaystyle=\begin{cases}{}^{\mathrm{La}}N^{\mathrm{2}}_{1}(\xi)&\text{for }i=1,\text{ node \#4}\,,\\
{}^{\mathrm{La}}N^{\mathrm{2}}_{2}(\xi)&\text{for }i=2,\text{ node \#11}\,,\\
{}^{\mathrm{La}}N^{\mathrm{2}}_{3}(\xi)&\text{for }i=3,\text{ node \#3}\,,\end{cases}$  (77) 
 
 $\displaystyle\text{E}_{4}:\;\breve{N}_{i}(\eta)$ $\displaystyle=\begin{cases}{}^{\mathrm{La}}N^{\mathrm{2}}_{1}(\eta)&\text{for }i=1,\text{ node \#1}\,,\\
{}^{\mathrm{La}}N^{\mathrm{2}}_{2}(\eta)&\text{for }i=2,\text{ node \#12}\,,\\
{}^{\mathrm{La}}N^{\mathrm{2}}_{3}(\eta)&\text{for }i=3,\text{ node \#4}\,.\end{cases}$  (78) 
 Considering the expressions to compute the shape functions on the divided edges $E_{1}$ and $E_{2}$ , we have to introduce new coordinates $\check{\xi}_{1}$ , $\check{\xi}_{2}$ , $\check{\eta}_{1}$ , and $\check{\eta}_{2}$ . These coordinates are defined by a simple linear transformation from $[-1,0]$ or $[0,1]$ to the reference domain $[-1,1]$ . The shape functions for the edges are exemplarily sketched in Figs. 7 and 7 .

The functions living on the edges of the transition element are in the next step projected/blended into the interior of the element by using the projection operators $\mathcal{P}_{\xi}[\square]$ , $\mathcal{P}_{\eta}[\square]$ , and $\mathcal{P}_{\xi}[\mathcal{P}_{\eta}[\square]]$ . First, we will derive the shape functions that are associated to the corner vertices: 
 
 $\displaystyle N_{1}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\xi)\,^{\mathrm{La}}N^{\mathrm{2}}_{1}(\eta)$ $\displaystyle+N_{1}^{1}(\eta)\,^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\check{\xi}_{1})$ $\displaystyle-N_{1}^{1}(\xi)N_{1}^{1}(\eta)\,,$  (79) 
 
 $\displaystyle N_{2}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\xi)\,^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\check{\eta}_{1})$ $\displaystyle+N_{1}^{1}(\eta)\,^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\check{\xi}_{2})$ $\displaystyle-N_{2}^{1}(\xi)N_{1}^{1}(\eta)\,,$  (80) 
 
 $\displaystyle N_{3}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\xi)\,^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\check{\eta}_{2})$ $\displaystyle+N_{2}^{1}(\eta)\,^{\mathrm{La}}N^{\mathrm{2}}_{3}(\xi)$ $\displaystyle-N_{2}^{1}(\xi)N_{2}^{1}(\eta)\,,$  (81) 
 
 $\displaystyle N_{4}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\xi)\,^{\mathrm{La}}N^{\mathrm{2}}_{3}(\eta)$ $\displaystyle+N_{2}^{1}(\eta)\,^{\mathrm{La}}N^{\mathrm{2}}_{1}(\xi)$ $\displaystyle-N_{1}^{1}(\xi)N_{2}^{1}(\eta)=\!^{\mathrm{s}}N^{*}_{4}(\xi,\eta)\,.$  (82) 
 Second, the edge shape functions are listed: 
 
 $\displaystyle N_{5}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\eta)\,^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\check{\xi}_{1})=\!^{\mathrm{s}}N^{*}_{6}(\check{\xi}_{1},\eta)\,,$  (83) 
 
 $\displaystyle N_{6}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\eta)\begin{cases}{}^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\check{\xi}_{1})\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\check{\xi}_{2})\,,\\
\end{cases}$  (84) 
 
 $\displaystyle N_{7}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\eta)\,^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\check{\xi}_{2})=\!^{\mathrm{s}}N^{*}_{6}(\check{\xi}_{2},\eta)\,,$  (85) 
 
 $\displaystyle N_{8}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\xi)\,^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\check{\eta}_{1})=\!^{\mathrm{s}}N^{*}_{9}(\xi,\check{\eta}_{1})\,,$  (86) 
 
 $\displaystyle N_{9}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\xi)\begin{cases}{}^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\check{\eta}_{1})\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\check{\eta}_{2})\,,\\
\end{cases}$  (87) 
 
 $\displaystyle N_{10}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\xi)\,^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\check{\eta}_{2})=\!^{\mathrm{s}}N^{*}_{9}(\xi,\check{\eta}_{2})\,,$  (88) 
 
 $\displaystyle N_{11}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\eta)\,^{\mathrm{La}}N^{\mathrm{2}}_{2}(\xi)=\!^{\mathrm{s}}N^{*}_{11}(\xi,\eta)\,,$  (89) 
 
 $\displaystyle N_{12}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\xi)\,^{\mathrm{La}}N^{\mathrm{2}}_{2}(\eta)=\!^{\mathrm{s}}N^{*}_{12}(\xi,\eta)\,.$  (90) 


All the shape functions of the derived transition element are illustrated in Fig. 8 . Here, we clearly observe the different sets of shape functions that have been employed for edges $E_{1}$ and $E_{2}$ or $E_{3}$ and $E_{4}$ , respectively. Assuming that the local coordinate systems of the p -edges are aligned this transition element is a means to combine different element types in one model.

A.5 Legendre-Legendre: Modal shape functions

The purpose of this section is to illustrate the coupling of hierarchic elements for local mesh refinement. The basis functions for the derivation are given by Eqs. ( 51 ) and ( 53 ). For the numbering of the nodes please see Fig. 2 . The interpolations along the four edges of the transition element are given as 
 
 $\displaystyle\text{E}_{1}:\;\bar{N}_{i}(\xi)$ $\displaystyle=\begin{cases}{}^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\check{\xi}_{1})&\text{for }i=1,\text{ node \#1}\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\check{\xi}_{1})&\text{for }i=2,\text{ node \#5}\,,\\
\begin{cases}{}^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\check{\xi}_{1})\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\check{\xi}_{2})\\
\end{cases}&\text{for }i=3,\text{ node \#6}\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\check{\xi}_{2})&\text{for }i=4,\text{ node \#7}\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\check{\xi}_{2})&\text{for }i=5,\text{ node \#2}\,,\end{cases}$  (91) 
 
 $\displaystyle\text{E}_{2}:\;\hat{N}_{i}(\eta)$ $\displaystyle=\begin{cases}{}^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\check{\eta}_{1})&\text{for }i=1,\text{ node \#2}\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\check{\eta}_{1})&\text{for }i=2,\text{ node \#8}\,,\\
\begin{cases}{}^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\check{\eta}_{1})\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\check{\eta}_{2})\\
\end{cases}&\text{for }i=3,\text{ node \#9}\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\check{\eta}_{2})&\text{for }i=4,\text{ node \#10}\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\check{\eta}_{2})&\text{for }i=5,\text{ node \#3}\,,\end{cases}$  (92) 
 
 $\displaystyle\text{E}_{3}:\;\tilde{N}_{i}(\xi)$ $\displaystyle=\begin{cases}{}^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\xi)&\text{for }i=1,\text{ node \#4}\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\xi)&\text{for }i=2,\text{ node \#11}\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\xi)&\text{for }i=3,\text{ node \#3}\,,\end{cases}$  (93) 
 
 $\displaystyle\text{E}_{4}:\;\breve{N}_{i}(\eta)$ $\displaystyle=\begin{cases}{}^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\eta)&\text{for }i=1,\text{ node \#1}\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\eta)&\text{for }i=2,\text{ node \#12}\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\eta)&\text{for }i=3,\text{ node \#4}\,.\end{cases}$  (94) 


The shape functions for the edges are exemplarily sketched in Figs. 10 and 10 . The functions living on the edges of the transition element are in the next step projected/blended into the interior of the element by using the projection operators $\mathcal{P}_{\xi}[\square]$ , $\mathcal{P}_{\eta}[\square]$ , and $\mathcal{P}_{\xi}[\mathcal{P}_{\eta}[\square]]$ . First, we will derive the shape functions that are associated to the corner vertices: 
 
 $\displaystyle N_{1}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\xi)\,^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\eta)$ $\displaystyle+N_{1}^{1}(\eta)\,^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\check{\xi}_{1})$ $\displaystyle-N_{1}^{1}(\xi)N_{1}^{1}(\eta)\,,$  (95) 
 
 $\displaystyle N_{2}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\xi)\,^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\check{\eta}_{1})$ $\displaystyle+N_{1}^{1}(\eta)\,^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\check{\xi}_{2})$ $\displaystyle-N_{2}^{1}(\xi)N_{1}^{1}(\eta)\,,$  (96) 
 
 $\displaystyle N_{3}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\xi)\,^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\check{\eta}_{2})$ $\displaystyle+N_{2}^{1}(\eta)\,^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\xi)$ $\displaystyle-N_{2}^{1}(\xi)N_{2}^{1}(\eta)\,,$  (97) 
 
 $\displaystyle N_{4}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\xi)\,^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\eta)$ $\displaystyle+N_{2}^{1}(\eta)\,^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\xi)$ $\displaystyle-N_{1}^{1}(\xi)N_{2}^{1}(\eta)=\!^{\mathrm{t}}N^{*}_{4}(\xi,\eta)\,.$  (98) 
 Second, the edge shape functions are listed: 
 
 $\displaystyle N_{5}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\eta)\,^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\check{\xi}_{1})=\!^{\mathrm{t}}N^{*}_{6}(\check{\xi}_{1},\eta)\,,$  (99) 
 
 $\displaystyle N_{6}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\eta)\begin{cases}{}^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\check{\xi}_{1})\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\check{\xi}_{2})\,,\\
\end{cases}$  (100) 
 
 $\displaystyle N_{7}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\eta)\,^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\check{\xi}_{2})=\!^{\mathrm{t}}N^{*}_{6}(\check{\xi}_{2},\eta)\,,$  (101) 
 
 $\displaystyle N_{8}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\xi)\,^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\check{\eta}_{1})=\!^{\mathrm{t}}N^{*}_{9}(\xi,\check{\eta}_{1})\,,$  (102) 
 
 $\displaystyle N_{9}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\xi)\begin{cases}{}^{\mathrm{Le}}N^{\mathrm{2}}_{3}(\check{\eta}_{1})\,,\\
{}^{\mathrm{Le}}N^{\mathrm{2}}_{1}(\check{\eta}_{2})\,,\\
\end{cases}$  (103) 
 
 $\displaystyle N_{10}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\xi)\,^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\check{\eta}_{2})=\!^{\mathrm{t}}N^{*}_{9}(\xi,\check{\eta}_{2})\,,$  (104) 
 
 $\displaystyle N_{11}(\xi,\eta)$ $\displaystyle=N_{2}^{1}(\eta)\,^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\xi)=\!^{\mathrm{t}}N^{*}_{11}(\xi,\eta)\,,$  (105) 
 
 $\displaystyle N_{12}(\xi,\eta)$ $\displaystyle=N_{1}^{1}(\xi)\,^{\mathrm{Le}}N^{\mathrm{2}}_{2}(\eta)=\!^{\mathrm{t}}N^{*}_{12}(\xi,\eta)\,.$  (106) 


All the shape functions of the derived transition element are illustrated in Fig. 11 .

Appendix B Displacement field for the higher order patch test

In Sect. 4.6 , the higher order patch test was used to assess the convergence properties of the proposed transition elements. In this section, we provide a detailed explanation of how an admissible higher order displacement field is determined. The number of monomials that are required for a complete polynomial can be read from Pascal’s triangle depicted in Fig. 12 . For the higher order patch test, we prescribe a displacement field of the form


 
 $\mathbf{u}=\sum\limits_{i}\mathbf{a}_{i}P^{p}_{i}(x,y)\,,\quad\forall\;i\in\{1,2,\ldots,n_{\mathrm{p}}\}$  (107) 
 at the boundary of the computational domain, where $\mathbf{a}_{i}$ denotes unknown parameters of the polynomial functions and $n_{\mathrm{p}}$ represents the number of monomials in the extension. Note that the high order displacement field cannot be chosen arbitrarily but needs to fulfill the equilibrium conditions in order to be admissible for the intended purpose, i.e., the coefficients $\mathbf{a}_{i}$ in Eq. ( 107 ) have to be determined from 
 
 $\mathrm{div}(\boldsymbol{\sigma})=\mathbf{0}\,,$  (108) 
 with $\boldsymbol{\sigma}$ denoting the stress tensor. In our derivation, we assume that no body/volume loads are applied. In a two-dimensional framework, this equation simplifies to 
 
 $\displaystyle\cfrac{\partial\sigma_{\mathrm{x}}}{\partial x}$ $\displaystyle+\cfrac{\partial\tau_{\mathrm{xy}}}{\partial y}$ $\displaystyle=0\,,$  (109) 
 
 $\displaystyle\cfrac{\partial\tau_{\mathrm{xy}}}{\partial x}$ $\displaystyle+\cfrac{\partial\sigma_{\mathrm{y}}}{\partial y}$ $\displaystyle=0\,.$  (110) 
 Provided that plane stress conditions govern the behavior of the structure, the normal stresses $\sigma_{\mathrm{x}}$ and $\sigma_{\mathrm{y}}$ are defined as 
 
 $\displaystyle\sigma_{\mathrm{x}}$ $\displaystyle=\cfrac{E}{1-\nu^{2}}\left(\varepsilon_{\mathrm{x}}+\nu\varepsilon_{\mathrm{y}}\right)\,,$  (111) 
 
 $\displaystyle\sigma_{\mathrm{y}}$ $\displaystyle=\cfrac{E}{1-\nu^{2}}\left(\varepsilon_{\mathrm{y}}+\nu\varepsilon_{\mathrm{x}}\right)\,,$  (112) 
 while the shear stress $\tau_{\mathrm{xy}}$ is given by 
 
 $\tau_{\mathrm{xy}}=\cfrac{E}{2(1+\nu)}\,\gamma_{\mathrm{xy}}\,.$  (113) 
 In the previous equations, an isotropic, linear-elastic material behavior with Young’s modulus $E$ and Poisson’s ratio $\nu$ is implied. For the sake of completeness, we also provide the definitions of the normal and shear strains 
 
 $\displaystyle\varepsilon_{\mathrm{x}}$ $\displaystyle=\cfrac{\partial u_{\mathrm{x}}}{\partial x}\,,$  (114) 
 
 $\displaystyle\varepsilon_{\mathrm{y}}$ $\displaystyle=\cfrac{\partial u_{\mathrm{y}}}{\partial y}\,,$  (115) 
 
 $\displaystyle\gamma_{\mathrm{xy}}$ $\displaystyle=\cfrac{\partial u_{\mathrm{x}}}{\partial y}+\cfrac{\partial u_{\mathrm{y}}}{\partial x}\,.$  (116) 
 To derive an admissible high order displacement field, we have to implement the methodology discussed in the following: 1. Set up the displacement field according to Eq. ( 107 ): 
 
 $\displaystyle u_{\mathrm{x}}(x,y)$ $\displaystyle=\sum\limits_{i=1}^{n_{\mathrm{p}}}a_{i}P^{p}_{i}(x,y)\,,$  (117) 
 
 $\displaystyle u_{\mathrm{y}}(x,y)$ $\displaystyle=\sum\limits_{i=1}^{n_{\mathrm{p}}}b_{i}P^{p}_{i}(x,y)\,.$  (118) 2. Compute the second derivatives of the displacement field: 
 
 $\displaystyle\cfrac{\partial^{2}u_{\mathrm{x}}(x,y)}{\partial x_{i}\partial x_{j}}$ $\displaystyle=\sum\limits_{k=4}^{n_{\mathrm{p}}}a_{k}\cfrac{\partial^{2}P^{p}_{k}(x,y)}{\partial x_{i}\partial x_{j}}\,,\qquad i,j=1,2\,,$  (119) 
 
 $\displaystyle\cfrac{\partial^{2}u_{\mathrm{y}}(x,y)}{\partial x_{i}\partial x_{j}}$ $\displaystyle=\sum\limits_{k=4}^{n_{\mathrm{p}}}b_{k}\cfrac{\partial^{2}P^{p}_{k}(x,y)}{\partial x_{i}\partial x_{j}}\,,\qquad i,j=1,2\,.$  (120) 3. Substitute the derivatives of the displacement field into the equilibrium conditions Eqs. ( 109 ) and ( 110 ): 
 
 $\displaystyle\begin{split}\cfrac{E}{1-\nu^{2}}\left(\sum\limits_{i=4}^{n_{\mathrm{p}}}a_{i}\cfrac{\partial^{2}P^{p}_{i}(x,y)}{\partial x^{2}}+\nu\sum\limits_{i=4}^{n_{\mathrm{p}}}b_{i}\cfrac{\partial^{2}P^{p}_{i}(x,y)}{\partial x\,\partial y}\nu\right)+\\
\cfrac{E}{2(1+\nu)}\left(\sum\limits_{i=4}^{n_{\mathrm{p}}}a_{i}\cfrac{\partial^{2}P^{p}_{i}(x,y)}{\partial y^{2}}+\sum\limits_{i=4}^{n_{\mathrm{p}}}b_{i}\cfrac{\partial^{2}P^{p}_{i}(x,y)}{\partial x\,\partial y}\right)&=0\,,\end{split}$  (121) 
 
 $\displaystyle\begin{split}\cfrac{E}{2(1+\nu)}\left(\sum\limits_{i=4}^{n_{\mathrm{p}}}a_{i}\cfrac{\partial^{2}P^{p}_{i}(x,y)}{\partial x\,\partial y}+\sum\limits_{i=4}^{n_{\mathrm{p}}}b_{i}\cfrac{\partial^{2}P^{p}_{i}(x,y)}{\partial x^{2}}\right)+\\
\cfrac{E}{1-\nu^{2}}\left(\sum\limits_{i=4}^{n_{\mathrm{p}}}b_{i}\cfrac{\partial^{2}P^{p}_{i}(x,y)}{\partial y^{2}}+\nu\sum\limits_{i=4}^{n_{\mathrm{p}}}a_{i}\cfrac{\partial^{2}P^{p}_{i}(x,y)}{\partial x\,\partial y}\right)&=0\,,\end{split}$  (122) 
 It is important to notice that the results are independent of Young’s modulus $E$ . 4. Sort the coefficients in Eqs. ( 121 ) and ( 122 ) according to the powers of $x^{i}y^{j}$ (the ordering of the coefficients is chosen according to Pascal’s triangle, see Fig. 12 ); $i,j\in\{0,1,2,\ldots,p\}$ : 
 
 $\displaystyle c_{0}$ $\displaystyle+c_{1}x$ $\displaystyle+c_{2}y$ $\displaystyle+c_{3}x^{2}$ $\displaystyle+c_{4}xy$ $\displaystyle+\ldots$ $\displaystyle+c_{n_{\mathrm{p}}-3}y^{p}$ $\displaystyle=0\,,$  (123) 
 
 $\displaystyle d_{0}$ $\displaystyle+d_{1}x$ $\displaystyle+d_{2}y$ $\displaystyle+d_{3}x^{2}$ $\displaystyle+d_{4}xy$ $\displaystyle+\ldots$ $\displaystyle+d_{n_{\mathrm{p}}-3}y^{p}$ $\displaystyle=0\,.$  (124) 5. Solve for the unknown coefficients $a_{i}$ and $b_{i}$ of the polynomial displacement field: (a) Each new coefficient ( $c_{j}$ , $d_{j}$ ) is a linear combination (function) of the polynomial coefficients ( $a_{i}$ , $b_{i}$ ) and needs to be zero in order to generate an admissible function. 
 
 $\displaystyle c_{j}=f_{1}(a_{i},b_{i})$ $\displaystyle=0$  (125) 
 
 $\displaystyle d_{j}=f_{2}(a_{i},b_{i})$ $\displaystyle=0$  (126) (b) Due to the required second order derivatives, less than $2n_{\mathrm{p}}$ equations are available to determine all $2n_{\mathrm{p}}$ coefficients (at least the constant and linear terms vanish). (c) We observe that in Eqs. ( 121 ) and ( 122 ) all coefficients associated with the mixed second order derivatives ( $\partial^{2}\square/\partial x\partial y$ ) are encountered twice, while the second order derivatives with respect to one coordinate ( $\partial^{2}\square/\partial x^{2}$ or $\partial^{2}\square/\partial y^{2}$ ) are only contained once. Hence, we can prescribe all coefficients that only contain $x^{i}$ with $i>1$ (or $y^{i}$ with $i>1$ ) as well as the coefficients for the linear and constant terms (which are not included in the equations due to the second order derivatives); see also Pascal’s triangle (Fig. 12 ). - In other words, compute all coefficients that are related to mixed polynomial terms $x^{i}y^{j}$ with $i,j>0$ (interior terms in Pascal’s triangle).

In the following, we apply the outlined procedure to determine admissible (polynomial) displacement fields of orders $p\,{=}\,2,3,\ldots,8$ . Due to the second-order derivatives that are involved in the equilibrium conditions, any linear displacement field is admissible and therefore, all three coefficients can assume arbitrary values. Note that for higher orders, the situation changes a little bit. Taking, for example, a complete fifth-order polynomial, we have 21 unknown coefficients and therefore, we need to determine the values of 42 parameters (two-dimensional case). Fortunately, as discussed above, we only need to solve for the mixed terms and can prescribe all other coefficients. Therefore, we need to find 20 conditions (10 mixed terms) to uniquely determine our function. For the sake of simplicity, we prescribe $a_{i}=i$ and $b_{i}=i$ as coefficients related to the terms that do not contain a mixed product \footnote{ 13 Remark: The coefficients are numbered according to their position in Pascal’s triangle starting from the top and continuing downwards and from left to right. Hence, a polynomial function has the following form: $P_{\mathrm{p}}=a_{1}+a_{2}x+a_{3}y+a_{4}x^{2}+\ldots$} . The results for a complete eighth order polynomial are listed in Table 1 . The higher order (admissible) displacement field is hierarchic in the sense that the coefficients of a complete polynomial of order $p$ also contain those of order $p\,{-}\,1$ . Thus, all lower order displacement fields ( $p\,{\leq}\,8$ ) can be recovered from the data compiled in Table 1 . For the computational model shown in Fig. 19 , the corresponding admissible displacement fields for complete polynomials of orders $p\,{=}\,1,2,\ldots,8$ are depicted in Fig. 13 .

References

[1] B. Szabó, I. Babuška, Finite Element Analysis, John Wiley and Sons, 1991.
[2] A. Düster, E. Rank, B. Szabó, Thep-Version of the Finite Element and Finite Cell Methods, John Wiley & Sons, 2018, Ch. 4, pp. 1–55. doi:10.1002/0470091355.
[3] A. Düster,High Order Finite Elements for Three-Dimensional, Thin-Walled Nonlinear Continua, Berichte aus dem Bauwesen, Shaker, 2002.URLhttps://www.ebook.de/de/product/15788086/alexander_duester_high_order_finite_elemente_for_three_dimensional_thin_walled_nonlinear_continua.html
[4] O. C. Zienkiewicz, R. L. Taylor, The Finite Element Method – Volume 1: The Basis, Butterworth Heinemann, 2000.
[5] C. Pozrikidis, Introduction to Finite and Spectral Element Methods using MATLAB, 2nd Edition, Chapman and Hall/CRC, 2014.
[6] S. Duczek,Higher Order Finite Elements and the Fictitious Domain Concept for Wave Propagation Analysis, VDI Fortschritt-Berichte Reihe 20 Nr. 458, 2014.URLhttp://edoc2.bibliothek.uni-halle.de/urn/urn:nbn:de:gbv:ma9:1-5434
[7] M. Dubiner, Spectral methods on triangles and other domains, Journal of Scientific Computing 6 (1991) 345–390. doi:10.1007/bf01060030.
[8] S. J. Sherwin, G. E. Karniadakis, A new triangular and tetrahedral basis for high-order (hp) finite element methods, International Journal for Numerical Methods in Engineering 38 (1995) 3775–3802. doi:10.1002/nme.1620382204.
[9] M. G. Blyth, C. Pozrikidis, A Lobatto interpolation grid over the triangle, IMA Journal of Applied Mathematics 71 (2006) 153–169. doi:10.1093/imamat/hxh077.
[10] M. G. Blyth, H. Luo, C. Pozrikidis, A comparison of interpolation grids over the triangle or the tetrahedron, Journal of Engineering Mathematics 56 (2006) 236–272. doi:10.1007/s10665-006-9063-0.
[11] H. Luo, C. Pozrikidis, A Lobatto interpolation grid in the tetrahedron, IMA Journal of Applied Mathematics 71 (2006) 298–313. doi:10.1093/imamat/hxh111.
[12] G. E. Karniadakis, S. J. Sherwin, Spectral/hpElement Methods for Computational Fluid Dynamics, Oxford Science Publications, 2005. doi:10.1093/acprof:oso/9780198528692.001.0001.
[13] K. J. Bathe, Finite Element Procedures, Prentice Hall, 2014.
[14] N. Zander, Multi-levelhp-FEM: Dynamically changing high-order mesh refinement with arbitrary hanging nodes, Ph.D. thesis, Technical University Munich (2017).
[15] T.-P. Fries, T. Belytschko, The extended/generalized finite element method: An overview of the method and its applications, International Journal for Numerical Methods in Engineering 84 (2010) 253–304. doi:10.1002/nme.2914.
[16] T. Belytschko, R. Gracie, G. Ventura, A review of extended/generalized finite element methods for material modeling, Modelling and Simulation in Materials Sciences and Engineering 17 (2009) 1–24. doi:10.1088/0965-0393/17/4/043001.
[17] E. Rank, Adaptive remeshing andh-pdomain decomposition, Computer Methods in Applied Mechanics and Engineering 101 (1992) 299–313. doi:10.1016/0045-7825(92)90027-h.
[18] J. Fish, The s-version of the finite element method, Computers & Structures 43 (1992) 539–547. doi:10.1016/0045-7949(92)90287-a.
[19] E. Rank, R. Krause, A multiscale finite-element method, Computers & Structures 64 (1997) 139–144. doi:10.4203/ccp.21.2.3.
[20] N. Zander, T. Bog, S. Kollmannsberger, D. Schillinger, E. Rank, Multi-levelhp-adaptivity: High-order mesh adaptivity without the difficulties of constraining hanging nodes, Computational Mechanics 55 (2015) 499–517. doi:10.1007/s00466-014-1118-x.
[21] E. Rank, A zooming-technique using a hierarchicalhp-version of the finite element method, in: Proceedings of MAFELAP, 1993.
[22] J. Fish, S. Markolefas, The s-version of the finite element method for multilayer laminates, International Journal for Numerical Methods in Engineering 33 (1992) 1081–1105. doi:10.1002/nme.1620330512.
[23] A. Düster, A. Niggl, E. Rank, Applying thehp-dversion of the FEM to locally enhance dimensionally reduced models, Computer Methods in Applied Mechanics and Engineering 196 (2007) 3524–3533. doi:10.1016/j.cma.2006.10.018.
[24] D. Schillinger, Thep- and B-spline versions of the geometrically nonlinear finite cell method and hierarchical refinement strategies for adaptive isogeometric and embedded domain analysis, Ph.D. thesis, Technical University Munich (2012).
[25] D. Schillinger, A. Düster, E. Rank, Thehp-d-adaptive finite cell method for geometrically nonlinear problems of solid mechanics, International Journal for Numerical Methods in Engineering 89 (2012) 1171–1202. doi:10.1002/nme.3289.
[26] N. Zander, T. Bog, M. Elhadadd, F. Frischmann, S. Kollmannsberger, E. Rank, The multi-levelhp-method for three-dimensional problems: Dynamically changing high-order mesh refinement with arbitrary hanging nodes, Computer Methods in Applied Mechanics and Engineering 310 (2016) 252–277. doi:10.1016/j.cma.2016.07.007.
[27] N. Zander, M. Ruess, T. Bog, S. Kollmannsberger, E. Rank, Multi-levelhp-adaptivity for cohesive fracture modeling, International Journal for Numerical Methods in Engineering 109 (2017) 1723–1755. doi:10.1002/nme.5340.
[28] A. K. Gupta, A finite element for transition from a fine to a coarse grid, International Journal for Numerical Methods in Engineering 12 (1978) 35–45. doi:10.1002/nme.1620120104.
[29] D. J. Morton, J. M. Tyler, J. R. Dorroh, A new 3d finite element for adaptiveh-refinement in 1-irregular meshes, International Journal for Numerical Methods in Engineering 38 (23) (1995) 3989–4008. doi:10.1002/nme.1620382306.
[30] F. Huang, X. Xie, A modified 5-node quadrilateral transition finite element, Advances in Applied Mathematics and Mechanics 2 (6) (2010) 784–797. doi:10.4208/aamm.09-m09110.
[31] D. N. Arnold, G. Awanou, The serendipity family of finite elements, Foundations of Computational Mathematics 11 (2011) 337–344. doi:10.1007/s10208-011-9087-3.
[32] M. S. Floater, A. Gillette, Nodal bases for the serendipity family of finite elements, Foundations of Computational Mathematics 17 (2017) 879–893. doi:10.1007/s10208-016-9305-0.
[33] E. Scholz, J. Altenbach, Kompatible Übergangselemente für lokale Netzverfeinerungen bei 2D- und 3D-Finite-Elemente-Modellen, Technische Mechanik 6 (1985) 72–78.
[34] W. J. Gordon, Blending-function methods of bivariate and multivariate interpolation and approximation, SIAM Journal on Numerical Analysis 8 (1971) 158–177. doi:10.1137/0708019.
[35] W. J. Gordon, C. A. Hall, Construction of curvilinear co-ordinate systems and applications to mesh generation, International Journal for Numerical Methods in Engineering 7 (1973) 461–477. doi:10.1002/nme.1620070405.
[36] W. J. Gordon, C. A. Hall, Transfinite element methods: Blending-function interpolation over arbitrary curved element domains, Numerische Mathematik 21 (1973) 109–129. doi:10.1007/bf01436298.
[37] W. J. Gordon, L. C. Thiel, Transfinite Mappings and their Application to Grid Generation, Elsevier Science Publishing, 1982.
[38] G. Királyfalvi, B. Szabó, Quasi-regional mapping for thep-version of the finite element method, Finite Elements in Analysis and Design 27 (1997) 85–97. doi:10.4203/ccp.39.2.6.
[39] S. A. Coons, Surfaces for computer-adid design of space forms, Tech. rep., Massachusetts Institute of Technology (1967).
[40] E. Scholz, Kompatible finite Übergangs-, Rand- und Standard-Strukturelemente zur effektiven mechanischen Strukturanalyse von Rand- und Übergangsbereichen, Ph.D. thesis, Otto-von-Guericke-University Magdeburg (1986).
[41] J. Altenbach, E. Scholz, Ableitung von Formfunktionen für finite Standard- und Übergangselemente auf der Grundlage der gemischten Interpolation, Technische Mechanik 8 (1987) 18–30.
[42] U. Röhr, Entwicklung und Anwendung einer kombinierten Finite-Elemente-Methode für die Strukturanalyse des Schiffskörpers, Ph.D. thesis, University of Rostock (1988).
[43] G. Birkhoff, J. C. Cavendish, W. J. Gordon, Multivariate approximation by locally blended univariate interpolants, Proceedings of the National Academy of Sciences of the United States of America 71 (9) (1974) 3423–3425. doi:10.1073/pnas.71.9.3423.
[44] J. C. Cavendish, Local mesh refinement using rectangular blended finite elements, Journal of Computational Physics 19 (1975) 211–228. doi:10.1016/0021-9991(75)90088-1.
[45] J. C. Cavendish, W. J. Gordon, C. A. Hall, Substructured macro elements based on locally blended interpolation, International Journal for Numerical Methods in Engineering 11 (1977) 1405–1421. doi:10.1002/nme.1620110906.
[46] J. C. Cavendish, C. A. Hall, A new class of transition blended finite elements for the analysis of solid structures, International Journal for Numerical Methods in Engineering 20 (1984) 241–253. doi:10.1002/nme.1620200205.
[47] C. G. Provatidis, Coons-patch macroelements in two-dimensional parabolic problems, Applied Mathematical Modelling 30 (4) (2006) 319–351. doi:10.1016/j.apm.2005.05.011.
[48] C. G. Provatidis, Two-dimensional elastostatic analysis using Coons-Gordon interpolation, Meccanica 47 (4) (2011) 951–967. doi:10.1007/s11012-011-9489-y.
[49] C. G. Provatidis, Precursors of Isogeometric Analysis, Springer International Publishing, 2019. doi:10.1007/978-3-030-03889-2.
[50] K. Weinberg, Ein Finite-Elemente-Konzept zur lokalen Netzverdichtung und seine Anwendung auf Koppel- und Kontaktprobleme, Ph.D. thesis, Otto von Guericke University Magdeburg (1996).
[51] K. Weinberg, U. Gabbert, Adaptive local-global analysis bypNhtransition elements, Technische Mechanik 19 (1999) 115–126.
[52] K. Weinberg, U. Gabbert, An adaptivepNh-technique for global-local finite element analysis, Engineering Computations 19 (2002) 485–500. doi:10.1108/02644400210435825.
[53] M. Baitsch, D. Hartmann, Piecewise polynomial shape functions forhp-finite element methods, Computer Methods in Applied Mechanics and Engineering 198 (13-14) (2009) 1126–1137. doi:10.1016/j.cma.2008.05.016.
[54] Y.-S. Cho, S. Im, MLS-based variable-node elements compatible with quadratic interpolation. part i: Formulation and application for non-matching meshes, International Journal for Numerical Methods in Engineering 65 (4) (2005) 494–516. doi:10.1002/nme.1453.
[55] J. H. Kim, J. H. Lim, J. H. Lee, S. Im, A new computational approach to contact mechanics using variable-node finite elements, International Journal for Numerical Methods in Engineering 73 (13) (2008) 1966–1988. doi:10.1002/nme.2162.
[56] J. Kim, S. Im, Polygonal type variable-node elements by means of the smoothed finite element method for analysis of two-dimensional fluid-solid interaction problems in viscous incompressible flows, Computers & Structures 182 (2017) 475–490. doi:10.1016/j.compstruc.2017.01.006.
[57] C. Song, The Scaled Boundary Finite Element Method, John Wiley & Sons, Ltd, 2018. doi:10.1002/9781119388487.
[58] H. Gravenkamp, S. Natarajan, Scaled boundary polygons for linear elastodynamics, Computer Methods in Applied Mechanics and Engineering 333 (2018) 238–256. doi:10.1016/j.cma.2018.01.031.
[59] I. Chiong, E. T. Ooi, C. Song, F. Tin-Loi, Scaled boundary polygons with application to fracture analysis of functionally graded materials, International Journal for Numerical Methods in Engineering 98 (2014) 562–589. arXiv:1010.1724,doi:10.1002/nme.
[60] E. T. Ooi, C. Song, S. Natarajan,Construction of high-order complete scaled boundary shape functions over arbitrary polygons with bubble functions, International Journal for Numerical Methods in Engineering 108 (2016) 1086–1120. doi:10.1002/nme.5259.URLhttp://doi.wiley.com/10.1002/nme.5259
[61] E. T. Ooi, S. Natarajan, C. Song, E. H. Ooi,Dynamic fracture simulations using the scaled boundary finite element method on hybrid polygon-quadtree meshes, International Journal of Impact Engineering 90 (2015) 154–164. doi:10.1016/j.ijimpeng.2015.10.016.URLhttp://dx.doi.org/10.1016/j.ijimpeng.2015.10.016
[62] H. Gravenkamp, A. A. Saputra, C. Song, C. Birk, Efficient wave propagation simulation on quadtree meshes using SBFEM with reduced modal basis, International Journal for Numerical Methods in Engineering 110 (2017) 1119–1141.
[63] A. A. Saputra, H. Talebi, D. Tran, C. Birk, C. Song, Automatic image-based stress analysis by the scaled boundary finite element method, International Journal for Numerical Methods in Engineering 109 (2017) 697–738. doi:10.1002/nme.5304.
[64] H. Gravenkamp, S. Duczek, Automatic image-based analyses using a coupled quadtree-SBFEM/SCM approach, Computational Mechanics 60 (2017) 559–584. doi:10.1007/s00466-017-1424-1.
[65] W. Xing, C. Song, F. Tin-Loi,A scaled boundary finite element based node-to-node scheme for 2D frictional contact problems, Computer Methods in Applied Mechanics and Engineering 333 (2018) 114–146. doi:10.1016/j.cma.2018.01.012.URLhttps://doi.org/10.1016/j.cma.2018.01.012
[66] Y. Liu, A. A. Saputra, J. Wang, F. Tin-Loi, C. Song,Automatic polyhedral mesh generation and scaled boundary finite element analysis of STL models, Computer Methods in Applied Mechanics and Engineering 313 (2017) 106–132. doi:10.1016/j.cma.2016.09.038.URLhttp://dx.doi.org/10.1016/j.cma.2016.09.038
[67] C. Song, The scaled boundary finite element method in structural dynamics, International Journal for Numerical Methods in Engineering 77 (2009) 1139–1171.
[68] J. Bulling, H. Gravenkamp, C. Birk, A high-order finite element technique with automatic treatment of stress singularities by semi-analytical enrichment, Computer Methods in Applied Mechanics and Engineering 355 (2019) 135–156.
[69] K. S. Surana, Shape functions for the isoparametric transition elements for cross-sectional properties and stress analysis of beams, International Journal for Numerical Methods in Engineering 15 (9) (1980) 1403–1407. doi:10.1002/nme.1620150912.
[70] K. S. Surana, Transition finite elements for three-dimensional stress analysis, International Journal for Numerical Methods in Engineering 15 (7) (1980) 991–1020. doi:10.1002/nme.1620150704.
[71] K. S. Surana, Transition finite elements for axisymmetric stress analysis, International Journal for Numerical Methods in Engineering 15 (6) (1980) 809–832. doi:10.1002/nme.1620150603.
[72] K. S. Surana, Geometrically non-linear formulation for the three dimensional solid-shell transition finite elements, Computers & Structures 15 (5) (1982) 549–566. doi:10.1016/0045-7949(82)90007-4.
[73] K. S. Surana, Geometrically nonlinear formulation for the axi-symmetric transition finite elements, Computers & Structures 17 (2) (1983) 243–255. doi:10.1016/0045-7949(83)90013-5.
[74] K. S. Surana, P. Kalim, Transition finite elements with temperature and temperature gradients as primary variables for axisymmetric heat conduction, Computers & Structures 24 (2) (1986) 197–212. doi:10.1016/0045-7949(86)90279-8.
[75] K. S. Surana, R. K. Phillips, Three dimensional solid-shell transition finite elements for heat conduction, Computers & Structures 26 (6) (1987) 941–950. doi:10.1016/0045-7949(87)90111-8.
[76] M. Abramowitz, I. A. Stegun, Handbook of Mathematical Functions, 10th Edition, no. 55 in Applied Mathematics Series, National Bureau of Standards, 1972.
[77] A. T. Patera, A spectral element method for fluid dynamics: Laminar flow in a channel expansion, Journal of Computational Physics 54 (1984) 468–488. doi:10.1016/0021-9991(84)90128-1.
[78] G. Seriani, E. Priolo, Spectral element method for acoustic wave simulation in heterogeneous media, Finite Elements in Analysis and Design 16 (1994) 337–348. doi:10.1016/0168-874X(94)90076-0.
[79] W. Dauksher, A. F. Emery, The solution of elastostatic and elastodynamic problems with Chebyshev spectral finite elements, Computer Methods in Applied Mechanics and Engineering 188 (2000) 217–233. doi:10.1016/S0045-7825(99)00149-8.
[80] S. Duczek, H. Gravenkamp, Critical assessment of different mass lumping schemes for higher order serendipity finite elements, Computer Methods in Applied Mechanics and Engineering 350 (2019) 836–897. doi:10.1016/j.cma.2019.03.028.
[81] S. Duczek, H. Gravenkamp, Mass lumping techniques in the spectral element method: On the equivalence of the row-sum, nodal quadrature, and diagonal scaling methods, Computer Methods in Applied Mechanics and Engineering 353 (2019) 516–569. doi:10.1016/j.cma.2019.05.016.
[82] H. Bröker,Integration von geometrischer Modellierung und Berechnung nach derp-Version der FEM, Berichte aus dem Bauwesen, Shaker Verlag, 2001.URLhttps://www.ebook.de/de/product/15787451/henrike_broeker_integration_von_geometrischer_modellierung_und_berechnung_nach_der_p_version_der_fem.html
[83] I. Ergatoudis, B. M. Irons, O. C. Zienkiewicz, Curved, isoparamteric, “quadrilateral” elements for finite element analysis, International Journal of Solids and Structures 4 (1) (1968) 31–42. doi:10.1016/0020-7683(68)90031-0.
[84] A. Düster, J. Parvizian, Z. Yang, E. Rank, The finite cell method for three-dimensional problems of solid mechanics, Computer Methods in Applied Mechanics and Engineering 197 (2008) 3768–3782. doi:10.1016/j.cma.2008.02.036.
[85] S. Duczek, U. Gabbert, The finite cell method for polygonal meshes: Poly-FCM, Computational Mechanics 58 (4) (2016) 587–618. doi:10.1007/s00466-016-1307-x.
[86] R. L. Taylor, J. C. Simo, O. C. Zienkiewicz, n. Chan, The patch test: A condition for assessing FEM convergence, International Journal for Numerical Methods in Engineering 22 (1) (1986) 39–62. doi:10.1002/nme.1620220105.
[87] B. M. Irons, Numerical inntegration applied to finite element methods, in: Proceedings of the Conference on Use of Digital Computes in Structural Engineering, University of Newcastle, 1996.
[88] N.-S. Lee, K.-J. Bathe, Effects of element distortions on the performance of isoparametric elements, International Journal for Numerical Methods in Engineering 36 (20) (1993) 3553–3576. doi:10.1002/nme.1620362009.
[89] O. C. Zienkiewicz, R. L. Taylor, The finite element patch test revisited: A computer test for convergence, validation and error estimates, Computer Methods in Applied Mechanics and Engineering 149 (1-4) (1997) 223–254. doi:10.1016/S0045-7825(97)00085-6.
[90] L. Demkowicz, Computing withhp-Adaptive Finite Elements: Volume 1: One and Two Dimensional Elliptic and Maxwell Problems, Chapman and Hall, 2006.
[91] L. Demkowicz, J. Kurtz, D. Pardo, M. Paszyński, W. Rachowicz, A. Zdunek, Computing withhp-Adaptive Finite Elements: Volume 2 Frontiers: Three Dimensional Elliptic and Maxwell Problems with Applications, Chapman and Hall, 2008.
[92] C. Song, E. T. Ooi, A. L. N. Pramod, S. Natarajan, A novel error indicator and an adaptive refinement technique using the scaled boundary finite element method, Engineering Analysis with Boundary Elements 94 (2018) 10–24. doi:10.1016/j.enganabound.2018.05.010.
[93] J. Parvizian, A. Düster, E. Rank, Finite cell method:h- andp-extension for embedded domain problems in solid mechanics, Computational Mechanics 41 (2007) 121–133. doi:10.1007/s00466-007-0173-y.
[94] M. Würkner, S. Duczek, H. Berger, H. Köppe, U. Gabbert, A software platform for the analysis of porous die-cast parts using the finite cell method, in: H. Altenbach, E. Carrera, G. Kulikov (Eds.), Analysis and Modelling of Advanced Structures and Smart Systems, 1st Edition, Vol. 81 of Advanced Structured Materials, Springer, Singapore, 2018, Ch. 14, pp. 327–341. doi:10.1007/978-981-10-6895-9-14.
[95] J. N. Jomo, F. de Prenter, M. Elhaddad, D. D’Angella, C. V. Verhoosel, S. Kollmannsberger, J. S. Kirschke, V. Nübel, H. van Brummelen, E. Rank, Robust and parallel scalable iterative solutions for large-scale finite cell analyses, Finite Elements in Analysis and Design 163 (2019) 14–30. doi:10.1016/j.finel.2019.01.009.
